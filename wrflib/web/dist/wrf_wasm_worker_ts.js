/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["wrf"] = factory();
	else
		root["wrf"] = factory();
})(self, function() {
return /******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./cursor_map.ts":
/*!***********************!*\
  !*** ./cursor_map.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cursorMap\": () => (/* binding */ cursorMap)\n/* harmony export */ });\n// Copyright (c) 2021-present, Cruise LLC\n//\n// This source code is licensed under the Apache License, Version 2.0,\n// found in the LICENSE-APACHE file in the root directory of this source tree.\n// You may not use this file except in compliance with the License.\n// Be sure to keep this in sync with cursor.rs!\nconst cursorMap = [\n    \"none\",\n    \"default\",\n    \"crosshair\",\n    \"pointer\",\n    \"default\",\n    \"move\",\n    \"text\",\n    \"wait\",\n    \"help\",\n    \"not-allowed\",\n    \"n-resize\",\n    \"ne-resize\",\n    \"e-resize\",\n    \"se-resize\",\n    \"s-resize\",\n    \"sw-resize\",\n    \"w-resize\",\n    \"nw-resize\",\n    \"ns-resize\",\n    \"nesw-resize\",\n    \"ew-resize\",\n    \"nwse-resize\",\n    \"col-resize\",\n    \"row-resize\", // RowResize=>23,\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jdXJzb3JfbWFwLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd3JmLy4vY3Vyc29yX21hcC50cz85YjhmIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgMjAyMS1wcmVzZW50LCBDcnVpc2UgTExDXG4vL1xuLy8gVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wLFxuLy8gZm91bmQgaW4gdGhlIExJQ0VOU0UtQVBBQ0hFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4vLyBZb3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBCZSBzdXJlIHRvIGtlZXAgdGhpcyBpbiBzeW5jIHdpdGggY3Vyc29yLnJzIVxuZXhwb3J0IGNvbnN0IGN1cnNvck1hcCA9IFtcbiAgICBcIm5vbmVcIixcbiAgICBcImRlZmF1bHRcIixcbiAgICBcImNyb3NzaGFpclwiLFxuICAgIFwicG9pbnRlclwiLFxuICAgIFwiZGVmYXVsdFwiLFxuICAgIFwibW92ZVwiLFxuICAgIFwidGV4dFwiLFxuICAgIFwid2FpdFwiLFxuICAgIFwiaGVscFwiLFxuICAgIFwibm90LWFsbG93ZWRcIixcbiAgICBcIm4tcmVzaXplXCIsXG4gICAgXCJuZS1yZXNpemVcIixcbiAgICBcImUtcmVzaXplXCIsXG4gICAgXCJzZS1yZXNpemVcIixcbiAgICBcInMtcmVzaXplXCIsXG4gICAgXCJzdy1yZXNpemVcIixcbiAgICBcInctcmVzaXplXCIsXG4gICAgXCJudy1yZXNpemVcIixcbiAgICBcIm5zLXJlc2l6ZVwiLFxuICAgIFwibmVzdy1yZXNpemVcIixcbiAgICBcImV3LXJlc2l6ZVwiLFxuICAgIFwibndzZS1yZXNpemVcIixcbiAgICBcImNvbC1yZXNpemVcIixcbiAgICBcInJvdy1yZXNpemVcIiwgLy8gUm93UmVzaXplPT4yMyxcbl07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./cursor_map.ts\n");

/***/ }),

/***/ "./webgl_renderer.ts":
/*!***************************!*\
  !*** ./webgl_renderer.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"WebGLRenderer\": () => (/* binding */ WebGLRenderer)\n/* harmony export */ });\n/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common */ \"./common.ts\");\n/* harmony import */ var _zerde__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./zerde */ \"./zerde.ts\");\n\n\nclass WebGLRenderer {\n    constructor(canvas, memory, sizingData, incompatibleBrowserCallback) {\n        this.uniformFnTable = {\n            float: function setFloat(self, loc, off) {\n                const slot = off >> 2;\n                self.gl.uniform1f(loc, self.basef32[slot]);\n            },\n            vec2: function setVec2(self, loc, off) {\n                const slot = off >> 2;\n                const basef32 = self.basef32;\n                self.gl.uniform2f(loc, basef32[slot], basef32[slot + 1]);\n            },\n            vec3: function setVec3(self, loc, off) {\n                const slot = off >> 2;\n                const basef32 = self.basef32;\n                self.gl.uniform3f(loc, basef32[slot], basef32[slot + 1], basef32[slot + 2]);\n            },\n            vec4: function setVec4(self, loc, off) {\n                const slot = off >> 2;\n                const basef32 = self.basef32;\n                self.gl.uniform4f(loc, basef32[slot], basef32[slot + 1], basef32[slot + 2], basef32[slot + 3]);\n            },\n            mat2: function setMat2(self, loc, off) {\n                self.gl.uniformMatrix2fv(loc, false, new Float32Array(self.memory.buffer, off, 4));\n            },\n            mat3: function setMat3(self, loc, off) {\n                self.gl.uniformMatrix3fv(loc, false, new Float32Array(self.memory.buffer, off, 9));\n            },\n            mat4: function setMat4(self, loc, off) {\n                const mat4 = new Float32Array(self.memory.buffer, off, 16);\n                self.gl.uniformMatrix4fv(loc, false, mat4);\n            },\n        };\n        // Array of function id's wasm can call on us; `self` is pointer to WebGLRenderer.\n        // Function names are suffixed with the index in the array, and annotated with\n        // their name in cx_webgl.rs, for easier matching.\n        this.sendFnTable = [\n            // end\n            function end0(_self) {\n                return true;\n            },\n            // compile_webgl_shader\n            function compileWebGLShader1(self) {\n                function parseShvarvec() {\n                    const len = self.zerdeParser.parseU32();\n                    const vars = [];\n                    for (let i = 0; i < len; i++) {\n                        vars.push({\n                            ty: self.zerdeParser.parseString(),\n                            name: self.zerdeParser.parseString(),\n                        });\n                    }\n                    return vars;\n                }\n                const ash = {\n                    shaderId: self.zerdeParser.parseU32(),\n                    fragment: self.zerdeParser.parseString(),\n                    vertex: self.zerdeParser.parseString(),\n                    geometrySlots: self.zerdeParser.parseU32(),\n                    instanceSlots: self.zerdeParser.parseU32(),\n                    passUniforms: parseShvarvec(),\n                    viewUniforms: parseShvarvec(),\n                    drawUniforms: parseShvarvec(),\n                    userUniforms: parseShvarvec(),\n                    textureSlots: parseShvarvec(),\n                };\n                self.compileWebGLShader(ash);\n            },\n            // alloc_array_buffer\n            function allocArrayBuffer2(self) {\n                const arrayBufferId = self.zerdeParser.parseU32();\n                const len = self.zerdeParser.parseU32();\n                const pointer = self.zerdeParser.parseU32();\n                const array = new Float32Array(self.memory.buffer, pointer, len);\n                self.allocArrayBuffer(arrayBufferId, array);\n            },\n            // alloc_index_buffer\n            function allocIndexBuffer3(self) {\n                const indexBufferId = self.zerdeParser.parseU32();\n                const len = self.zerdeParser.parseU32();\n                const pointer = self.zerdeParser.parseU32();\n                const array = new Uint32Array(self.memory.buffer, pointer, len);\n                self.allocIndexBuffer(indexBufferId, array);\n            },\n            // alloc_vao\n            function allocVao4(self) {\n                const vaoId = self.zerdeParser.parseU32();\n                const shaderId = self.zerdeParser.parseU32();\n                const geomIbId = self.zerdeParser.parseU32();\n                const geomVbId = self.zerdeParser.parseU32();\n                const instVbId = self.zerdeParser.parseU32();\n                self.allocVao(vaoId, shaderId, geomIbId, geomVbId, instVbId);\n            },\n            // draw_call\n            function drawCall5(self) {\n                const shaderId = self.zerdeParser.parseU32();\n                const vaoId = self.zerdeParser.parseU32();\n                const uniformsPassPtr = self.zerdeParser.parseU32();\n                const uniformsViewPtr = self.zerdeParser.parseU32();\n                const uniformsDrawPtr = self.zerdeParser.parseU32();\n                const uniformsUserPtr = self.zerdeParser.parseU32();\n                const textures = self.zerdeParser.parseU32();\n                self.drawCall(shaderId, vaoId, uniformsPassPtr, uniformsViewPtr, uniformsDrawPtr, uniformsUserPtr, textures);\n            },\n            // update_texture_image2d\n            function allocTexture6(self) {\n                const textureId = self.zerdeParser.parseU32();\n                const width = self.zerdeParser.parseU32();\n                const height = self.zerdeParser.parseU32();\n                const dataPtr = self.zerdeParser.parseU32();\n                self.allocTexture(textureId, width, height, dataPtr);\n            },\n            // begin_render_targets\n            function beginRenderTargets7(self) {\n                const passId = self.zerdeParser.parseU32();\n                const width = self.zerdeParser.parseU32();\n                const height = self.zerdeParser.parseU32();\n                self.beginRenderTargets(passId, width, height);\n            },\n            // add_color_target\n            function addColorTarget8(self) {\n                const textureId = self.zerdeParser.parseU32();\n                const initOnly = self.zerdeParser.parseU32();\n                const r = self.zerdeParser.parseF32();\n                const g = self.zerdeParser.parseF32();\n                const b = self.zerdeParser.parseF32();\n                const a = self.zerdeParser.parseF32();\n                self.addColorTarget(textureId, initOnly, r, g, b, a);\n            },\n            // set_depth_target\n            function setDepthTarget9(self) {\n                const textureId = self.zerdeParser.parseU32();\n                const initOnly = self.zerdeParser.parseU32();\n                const depth = self.zerdeParser.parseF32();\n                self.setDepthTarget(textureId, initOnly, depth);\n            },\n            // end_render_targets\n            function endRenderTargets10(self) {\n                self.endRenderTargets();\n            },\n            // set_default_depth_and_blend_mode\n            function setDefaultDepthAndBlendMode11(self) {\n                self.setDefaultDepthAndBlendMode();\n            },\n            // begin_main_canvas\n            function beginMainCanvas12(self) {\n                const r = self.zerdeParser.parseF32();\n                const g = self.zerdeParser.parseF32();\n                const b = self.zerdeParser.parseF32();\n                const a = self.zerdeParser.parseF32();\n                const depth = self.zerdeParser.parseF32();\n                self.beginMainCanvas(r, g, b, a, depth);\n            },\n        ];\n        this.canvas = canvas;\n        this.memory = memory;\n        this.sizingData = sizingData;\n        this.shaders = [];\n        this.indexBuffers = [];\n        this.arrayBuffers = [];\n        this.vaos = [];\n        this.textures = [];\n        this.framebuffers = [];\n        this.targetWidth = 0;\n        this.targetHeight = 0;\n        this.clearFlags = 0;\n        this.clearR = 0;\n        this.clearG = 0;\n        this.clearB = 0;\n        this.clearA = 0;\n        this.clearDepth = 0;\n        // this.isMainCanvas = false;\n        const options = {\n            preferLowPowerToHighPerformance: true,\n            // xrCompatible: true // TODO(JP): Bring back some day?\n        };\n        // @ts-ignore - TODO(Paras): Get proper support for OffscreenCanvas\n        this.gl =\n            // @ts-ignore\n            canvas.getContext(\"webgl\", options) ||\n                // @ts-ignore\n                canvas.getContext(\"webgl-experimental\", options) ||\n                // @ts-ignore\n                canvas.getContext(\"experimental-webgl\", options);\n        if (!this.gl) {\n            incompatibleBrowserCallback();\n            return;\n        }\n        this.OESVertexArrayObject = (0,_common__WEBPACK_IMPORTED_MODULE_0__.assertNotNull)(this.gl.getExtension(\"OES_vertex_array_object\"));\n        this.ANGLEInstancedArrays = (0,_common__WEBPACK_IMPORTED_MODULE_0__.assertNotNull)(this.gl.getExtension(\"ANGLE_instanced_arrays\"));\n        this.gl.getExtension(\"OES_standard_derivatives\");\n        this.gl.getExtension(\"OES_element_index_uint\");\n        this.resize(sizingData);\n    }\n    processMessages(zerdeParserPtr) {\n        this.zerdeParser = new _zerde__WEBPACK_IMPORTED_MODULE_1__.ZerdeParser(this.memory, zerdeParserPtr);\n        this.basef32 = new Float32Array(this.memory.buffer);\n        this.baseu32 = new Uint32Array(this.memory.buffer);\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n            const msgType = this.zerdeParser.parseU32();\n            if (this.sendFnTable[msgType](this)) {\n                break;\n            }\n        }\n    }\n    resize(sizingData) {\n        this.sizingData = sizingData;\n        this.canvas.width = sizingData.width * sizingData.dpiFactor;\n        this.canvas.height = sizingData.height * sizingData.dpiFactor;\n    }\n    getAttribLocations(program, base, slots) {\n        const gl = this.gl;\n        const attribLocs = [];\n        let attribs = slots >> 2;\n        if ((slots & 3) != 0)\n            attribs++;\n        for (let i = 0; i < attribs; i++) {\n            let size = slots - i * 4;\n            if (size > 4)\n                size = 4;\n            attribLocs.push({\n                loc: gl.getAttribLocation(program, base + i),\n                offset: i * 16,\n                size: size,\n                stride: slots * 4,\n            });\n        }\n        return attribLocs;\n    }\n    getUniformLocations(program, uniforms) {\n        const gl = this.gl;\n        const uniformLocs = [];\n        let offset = 0;\n        for (let i = 0; i < uniforms.length; i++) {\n            const uniform = uniforms[i];\n            // lets align the uniform\n            const slots = uniformSizeTable[uniform.ty];\n            if ((offset & 3) != 0 && (offset & 3) + slots > 4) {\n                // goes over the boundary\n                offset += 4 - (offset & 3); // make jump to new slot\n            }\n            uniformLocs.push({\n                name: uniform.name,\n                offset: offset << 2,\n                ty: uniform.ty,\n                loc: gl.getUniformLocation(program, uniform.name),\n                fn: this.uniformFnTable[uniform.ty],\n            });\n            offset += slots;\n        }\n        return uniformLocs;\n    }\n    compileWebGLShader(ash) {\n        const gl = this.gl;\n        const vsh = (0,_common__WEBPACK_IMPORTED_MODULE_0__.assertNotNull)(gl.createShader(gl.VERTEX_SHADER));\n        gl.shaderSource(vsh, ash.vertex);\n        gl.compileShader(vsh);\n        if (!gl.getShaderParameter(vsh, gl.COMPILE_STATUS)) {\n            console.log(gl.getShaderInfoLog(vsh), addLineNumbersToString(ash.vertex));\n        }\n        // compile pixelshader\n        const fsh = (0,_common__WEBPACK_IMPORTED_MODULE_0__.assertNotNull)(gl.createShader(gl.FRAGMENT_SHADER));\n        gl.shaderSource(fsh, ash.fragment);\n        gl.compileShader(fsh);\n        if (!gl.getShaderParameter(fsh, gl.COMPILE_STATUS)) {\n            console.log(gl.getShaderInfoLog(fsh), addLineNumbersToString(ash.fragment));\n        }\n        const program = (0,_common__WEBPACK_IMPORTED_MODULE_0__.assertNotNull)(gl.createProgram());\n        gl.attachShader(program, vsh);\n        gl.attachShader(program, fsh);\n        gl.linkProgram(program);\n        if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n            console.log(gl.getProgramInfoLog(program), addLineNumbersToString(ash.vertex), addLineNumbersToString(ash.fragment));\n        }\n        // fetch all attribs and uniforms\n        this.shaders[ash.shaderId] = {\n            geomAttribs: this.getAttribLocations(program, \"mpsc_packed_geometry_\", ash.geometrySlots),\n            instAttribs: this.getAttribLocations(program, \"mpsc_packed_instance_\", ash.instanceSlots),\n            passUniforms: this.getUniformLocations(program, ash.passUniforms),\n            viewUniforms: this.getUniformLocations(program, ash.viewUniforms),\n            drawUniforms: this.getUniformLocations(program, ash.drawUniforms),\n            userUniforms: this.getUniformLocations(program, ash.userUniforms),\n            textureSlots: this.getUniformLocations(program, ash.textureSlots),\n            instanceSlots: ash.instanceSlots,\n            program: program,\n            ash: ash,\n        };\n    }\n    allocArrayBuffer(arrayBufferId, array) {\n        const gl = this.gl;\n        let buf = this.arrayBuffers[arrayBufferId];\n        if (buf === undefined) {\n            buf = this.arrayBuffers[arrayBufferId] = {\n                glBuf: (0,_common__WEBPACK_IMPORTED_MODULE_0__.assertNotNull)(gl.createBuffer()),\n                length: array.length,\n            };\n        }\n        else {\n            buf.length = array.length;\n        }\n        gl.bindBuffer(gl.ARRAY_BUFFER, buf.glBuf);\n        gl.bufferData(gl.ARRAY_BUFFER, array, gl.STATIC_DRAW);\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    }\n    allocIndexBuffer(indexBufferId, array) {\n        const gl = this.gl;\n        let buf = this.indexBuffers[indexBufferId];\n        if (buf === undefined) {\n            buf = this.indexBuffers[indexBufferId] = {\n                glBuf: (0,_common__WEBPACK_IMPORTED_MODULE_0__.assertNotNull)(gl.createBuffer()),\n                length: array.length,\n            };\n        }\n        else {\n            buf.length = array.length;\n        }\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buf.glBuf);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, array, gl.STATIC_DRAW);\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    }\n    allocVao(vaoId, shaderId, geomIbId, geomVbId, instVbId) {\n        const gl = this.gl;\n        const oldVao = this.vaos[vaoId];\n        if (oldVao) {\n            this.OESVertexArrayObject.deleteVertexArrayOES(oldVao.glVao);\n        }\n        const glVao = (0,_common__WEBPACK_IMPORTED_MODULE_0__.assertNotNull)(this.OESVertexArrayObject.createVertexArrayOES());\n        const vao = (this.vaos[vaoId] = { glVao, geomIbId, geomVbId, instVbId });\n        this.OESVertexArrayObject.bindVertexArrayOES(vao.glVao);\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.arrayBuffers[geomVbId].glBuf);\n        const shader = this.shaders[shaderId];\n        for (let i = 0; i < shader.geomAttribs.length; i++) {\n            const attr = shader.geomAttribs[i];\n            if (attr.loc < 0) {\n                continue;\n            }\n            gl.vertexAttribPointer(attr.loc, attr.size, gl.FLOAT, false, attr.stride, attr.offset);\n            gl.enableVertexAttribArray(attr.loc);\n            this.ANGLEInstancedArrays.vertexAttribDivisorANGLE(attr.loc, 0);\n        }\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.arrayBuffers[instVbId].glBuf);\n        for (let i = 0; i < shader.instAttribs.length; i++) {\n            const attr = shader.instAttribs[i];\n            if (attr.loc < 0) {\n                continue;\n            }\n            gl.vertexAttribPointer(attr.loc, attr.size, gl.FLOAT, false, attr.stride, attr.offset);\n            gl.enableVertexAttribArray(attr.loc);\n            this.ANGLEInstancedArrays.vertexAttribDivisorANGLE(attr.loc, 1);\n        }\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffers[geomIbId].glBuf);\n        this.OESVertexArrayObject.bindVertexArrayOES(null);\n    }\n    drawCall(shaderId, vaoId, passUniformsPtr, viewUniformsPtr, drawUniformsPtr, userUniformsPtr, texturesPtr) {\n        const gl = this.gl;\n        const shader = this.shaders[shaderId];\n        gl.useProgram(shader.program);\n        const vao = this.vaos[vaoId];\n        this.OESVertexArrayObject.bindVertexArrayOES(vao.glVao);\n        const indexBuffer = this.indexBuffers[vao.geomIbId];\n        const instanceBuffer = this.arrayBuffers[vao.instVbId];\n        // set up uniforms TODO do this a bit more incremental based on uniform layer\n        // also possibly use webGL2 uniform buffers. For now this will suffice for webGL 1 compat\n        const passUniforms = shader.passUniforms;\n        // if vr_presenting\n        const viewUniforms = shader.viewUniforms;\n        for (let i = 0; i < viewUniforms.length; i++) {\n            const uni = viewUniforms[i];\n            uni.fn(this, uni.loc, uni.offset + viewUniformsPtr);\n        }\n        const drawUniforms = shader.drawUniforms;\n        for (let i = 0; i < drawUniforms.length; i++) {\n            const uni = drawUniforms[i];\n            uni.fn(this, uni.loc, uni.offset + drawUniformsPtr);\n        }\n        const userUniforms = shader.userUniforms;\n        for (let i = 0; i < userUniforms.length; i++) {\n            const uni = userUniforms[i];\n            uni.fn(this, uni.loc, uni.offset + userUniformsPtr);\n        }\n        const textureSlots = shader.textureSlots;\n        for (let i = 0; i < textureSlots.length; i++) {\n            const texSlot = textureSlots[i];\n            const texId = this.baseu32[(texturesPtr >> 2) + i];\n            const texObj = this.textures[texId];\n            gl.activeTexture(gl.TEXTURE0 + i);\n            gl.bindTexture(gl.TEXTURE_2D, texObj);\n            gl.uniform1i(texSlot.loc, i);\n        }\n        const indices = indexBuffer.length;\n        const instances = instanceBuffer.length / shader.instanceSlots;\n        // if (this.isMainCanvas && xrIsPresenting) {\n        // for (let i = 3; i < pass_uniforms.length; i ++) {\n        //     let uni = pass_uniforms[i];\n        //     uni.fn(this, uni.loc, uni.offset + pass_uniforms_ptr);\n        // }\n        // // the first 2 matrices are project and view\n        // let left_viewport = this.xr_left_viewport;\n        // gl.viewport(left_viewport.x, left_viewport.y, left_viewport.width, left_viewport.height);\n        // gl.uniformMatrix4fv(pass_uniforms[0].loc, false, this.xr_left_projection_matrix);\n        // gl.uniformMatrix4fv(pass_uniforms[1].loc, false, this.xr_left_transform_matrix);\n        // gl.uniformMatrix4fv(pass_uniforms[2].loc, false, this.xr_left_invtransform_matrix);\n        // this.ANGLE_instanced_arrays.drawElementsInstancedANGLE(gl.TRIANGLES, indices, gl.UNSIGNED_INT, 0, instances);\n        // let right_viewport = this.xr_right_viewport;\n        // gl.viewport(right_viewport.x, right_viewport.y, right_viewport.width, right_viewport.height);\n        // gl.uniformMatrix4fv(pass_uniforms[0].loc, false, this.xr_right_projection_matrix);\n        // gl.uniformMatrix4fv(pass_uniforms[1].loc, false, this.xr_right_transform_matrix);\n        // gl.uniformMatrix4fv(pass_uniforms[2].loc, false, this.xr_right_invtransform_matrix);\n        // this.ANGLE_instanced_arrays.drawElementsInstancedANGLE(gl.TRIANGLES, indices, gl.UNSIGNED_INT, 0, instances);\n        // } else {\n        for (let i = 0; i < passUniforms.length; i++) {\n            const uni = passUniforms[i];\n            uni.fn(this, uni.loc, uni.offset + passUniformsPtr);\n        }\n        this.ANGLEInstancedArrays.drawElementsInstancedANGLE(gl.TRIANGLES, indices, gl.UNSIGNED_INT, 0, instances);\n        // }\n        this.OESVertexArrayObject.bindVertexArrayOES(null);\n    }\n    allocTexture(textureId, width, height, dataPtr) {\n        const gl = this.gl;\n        const glTex = this.textures[textureId] || gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, glTex);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        const data = new Uint8Array(this.memory.buffer, dataPtr, width * height * 4);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, data);\n        this.textures[textureId] = glTex;\n    }\n    beginRenderTargets(passId, width, height) {\n        const gl = this.gl;\n        this.targetWidth = width;\n        this.targetHeight = height;\n        this.clearFlags = 0;\n        // this.isMainCanvas = false;\n        const glFramebuffer = this.framebuffers[passId] ||\n            (this.framebuffers[passId] = (0,_common__WEBPACK_IMPORTED_MODULE_0__.assertNotNull)(gl.createFramebuffer()));\n        gl.bindFramebuffer(gl.FRAMEBUFFER, glFramebuffer);\n    }\n    addColorTarget(textureId, initOnly, r, g, b, a) {\n        // if use_default\n        this.clearR = r;\n        this.clearG = g;\n        this.clearB = b;\n        this.clearA = a;\n        const gl = this.gl;\n        const glTex = this.textures[textureId] ||\n            (this.textures[textureId] = gl.createTexture());\n        // resize or create texture\n        if (glTex.mpWidth != this.targetWidth ||\n            glTex.mpHeight != this.targetHeight) {\n            gl.bindTexture(gl.TEXTURE_2D, glTex);\n            this.clearFlags |= gl.COLOR_BUFFER_BIT;\n            glTex.mpWidth = this.targetWidth;\n            glTex.mpHeight = this.targetHeight;\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, glTex.mpWidth, glTex.mpHeight, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n        }\n        else if (!initOnly) {\n            this.clearFlags |= gl.COLOR_BUFFER_BIT;\n        }\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, glTex, 0);\n    }\n    setDepthTarget(textureId, initOnly, depth) {\n        const gl = this.gl;\n        this.clearDepth = depth;\n        const glRenderBuffer = this.textures[textureId] ||\n            (this.textures[textureId] = gl.createRenderbuffer());\n        if (glRenderBuffer.mpWidth != this.targetWidth ||\n            glRenderBuffer.mpHeight != this.targetHeight) {\n            // Borrowed concept from https://webglfundamentals.org/webgl/lessons/webgl-render-to-texture.html\n            gl.bindRenderbuffer(gl.RENDERBUFFER, glRenderBuffer);\n            this.clearFlags |= gl.DEPTH_BUFFER_BIT;\n            glRenderBuffer.mpWidth = this.targetWidth;\n            glRenderBuffer.mpHeight = this.targetHeight;\n            gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, this.targetWidth, this.targetHeight);\n        }\n        else if (!initOnly) {\n            this.clearFlags |= gl.DEPTH_BUFFER_BIT;\n        }\n        gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, glRenderBuffer);\n    }\n    endRenderTargets() {\n        const gl = this.gl;\n        // process the actual 'clear'\n        gl.viewport(0, 0, this.targetWidth, this.targetHeight);\n        // check if we need to clear color, and depth\n        // clear it\n        if (this.clearFlags) {\n            gl.clearColor(this.clearR, this.clearG, this.clearB, this.clearA);\n            gl.clearDepth(this.clearDepth);\n            gl.clear(this.clearFlags);\n        }\n    }\n    setDefaultDepthAndBlendMode() {\n        const gl = this.gl;\n        gl.enable(gl.DEPTH_TEST);\n        gl.depthFunc(gl.LEQUAL);\n        gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n        gl.blendFuncSeparate(gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.BLEND);\n    }\n    beginMainCanvas(r, g, b, a, depth) {\n        const gl = this.gl;\n        // this.isMainCanvas = true;\n        // if (this.xrIsPresenting) {\n        // let xr_webgllayer = this.xr_session.renderState.baseLayer;\n        // this.gl.bindFramebuffer(gl.FRAMEBUFFER, xr_webgllayer.framebuffer);\n        // gl.viewport(0, 0, xr_webgllayer.framebufferWidth, xr_webgllayer.framebufferHeight);\n        // // quest 1 is 3648\n        // // quest 2 is 4096\n        // let left_view = this.xr_pose.views[0];\n        // let right_view = this.xr_pose.views[1];\n        // this.xr_left_viewport = xr_webgllayer.getViewport(left_view);\n        // this.xr_right_viewport = xr_webgllayer.getViewport(right_view);\n        // this.xr_left_projection_matrix = left_view.projectionMatrix;\n        // this.xr_left_transform_matrix = left_view.transform.inverse.matrix;\n        // this.xr_left_invtransform_matrix = left_view.transform.matrix;\n        // this.xr_right_projection_matrix = right_view.projectionMatrix;\n        // this.xr_right_transform_matrix = right_view.transform.inverse.matrix;\n        // this.xr_right_camera_pos = right_view.transform.inverse.position;\n        // this.xr_right_invtransform_matrix = right_view.transform.matrix;\n        // } else {\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.viewport(0, 0, this.sizingData.width * this.sizingData.dpiFactor, this.sizingData.height * this.sizingData.dpiFactor);\n        // }\n        gl.clearColor(r, g, b, a);\n        gl.clearDepth(depth);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    }\n}\nconst uniformSizeTable = {\n    float: 1,\n    vec2: 2,\n    vec3: 3,\n    vec4: 4,\n    mat2: 4,\n    mat3: 9,\n    mat4: 16,\n};\nfunction addLineNumbersToString(code) {\n    const lines = code.split(\"\\n\");\n    let out = \"\";\n    for (let i = 0; i < lines.length; i++) {\n        out += i + 1 + \": \" + lines[i] + \"\\n\";\n    }\n    return out;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./webgl_renderer.ts\n");

/***/ }),

/***/ "./wrf_wasm_worker.ts":
/*!****************************!*\
  !*** ./wrf_wasm_worker.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"WasmApp\": () => (/* binding */ WasmApp)\n/* harmony export */ });\n/* harmony import */ var _cursor_map__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cursor_map */ \"./cursor_map.ts\");\n/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common */ \"./common.ts\");\n/* harmony import */ var _zerde__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./zerde */ \"./zerde.ts\");\n/* harmony import */ var _zerde_eventloop_events__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./zerde_eventloop_events */ \"./zerde_eventloop_events.ts\");\n/* harmony import */ var _zerde_keyboard_handlers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./zerde_keyboard_handlers */ \"./zerde_keyboard_handlers.ts\");\n/* harmony import */ var _webgl_renderer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./webgl_renderer */ \"./webgl_renderer.ts\");\n/* harmony import */ var _rpc_types__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./rpc_types */ \"./rpc_types.ts\");\n// Copyright (c) 2021-present, Cruise LLC\n//\n// This source code is licensed under the Apache License, Version 2.0,\n// found in the LICENSE-APACHE file in the root directory of this source tree.\n// You may not use this file except in compliance with the License.\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n\n\n\n\nconst rpc = new _common__WEBPACK_IMPORTED_MODULE_1__.Rpc(self);\nconst isFirefox = self.navigator.userAgent.toLowerCase().indexOf(\"firefox\") > -1;\nclass WasmApp {\n    constructor({ offscreenCanvas, wasmModule, wasmExports, memory, sizingData, baseUri, fileHandles, taskWorkerSab, }) {\n        this.xrCanPresent = false;\n        this.xrIsPresenting = false;\n        // Array of function id's wasm can call on us; `self` is pointer to WasmApp.\n        // Function names are suffixed with the index in the array, and annotated with\n        // their name in cx_wasm32.rs, for easier matching.\n        this.sendFnTable = [\n            // end\n            function end0(_self) {\n                return true;\n            },\n            // run_webgl\n            function runWebGL1(self) {\n                const zerdeParserPtr = self.zerdeParser.parseU64();\n                if (self.webglRenderer) {\n                    self.webglRenderer.processMessages(Number(zerdeParserPtr));\n                    self.exports.deallocWasmMessage(zerdeParserPtr);\n                }\n                else {\n                    self.runWebGLPromise = rpc\n                        .send(_rpc_types__WEBPACK_IMPORTED_MODULE_6__.WorkerEvent.RunWebGL, Number(zerdeParserPtr))\n                        .then(() => {\n                        self.exports.deallocWasmMessage(zerdeParserPtr);\n                        self.runWebGLPromise = undefined;\n                    });\n                }\n            },\n            // log\n            function log2(self) {\n                console.log(self.zerdeParser.parseString());\n            },\n            // load_deps\n            function loadDeps3(self) {\n                const deps = [];\n                const numDeps = self.zerdeParser.parseU32();\n                for (let i = 0; i < numDeps; i++) {\n                    deps.push(self.zerdeParser.parseString());\n                }\n                self.loadDeps(deps);\n            },\n            // request_animation_frame\n            function requestAnimationFrame4(self) {\n                self.requestAnimationFrame();\n            },\n            // set_document_title\n            function setDocumentTitle5(self) {\n                self.setDocumentTitle(self.zerdeParser.parseString());\n            },\n            // set_mouse_cursor\n            function setMouseCursor6(self) {\n                self.setMouseCursor(self.zerdeParser.parseU32());\n            },\n            // show_text_ime\n            function showTextIme7(self) {\n                const x = self.zerdeParser.parseF32();\n                const y = self.zerdeParser.parseF32();\n                rpc.send(_rpc_types__WEBPACK_IMPORTED_MODULE_6__.WorkerEvent.ShowTextIME, { x, y });\n            },\n            // hide_text_ime\n            function hideTextIme8(_self) {\n                // TODO(JP): doesn't seem to do anything, is that intentional?\n            },\n            // text_copy_response\n            function textCopyResponse9(self) {\n                const textCopyResponse = self.zerdeParser.parseString();\n                rpc.send(_rpc_types__WEBPACK_IMPORTED_MODULE_6__.WorkerEvent.TextCopyResponse, textCopyResponse);\n            },\n            // start_timer\n            function startTimer10(self) {\n                const repeats = self.zerdeParser.parseU32();\n                const id = self.zerdeParser.parseF64();\n                const interval = self.zerdeParser.parseF64();\n                self.startTimer(id, interval, repeats);\n            },\n            // stop_timer\n            function stopTimer11(self) {\n                const id = self.zerdeParser.parseF64();\n                self.stopTimer(id);\n            },\n            // xr_start_presenting\n            function xrStartPresenting12(self) {\n                self.xrStartPresenting();\n            },\n            // xr_stop_presenting\n            function xrStopPresenting13(self) {\n                self.xrStopPresenting();\n            },\n            // http_send\n            function httpSend14(self) {\n                const port = self.zerdeParser.parseU32();\n                const signalId = self.zerdeParser.parseU32();\n                const verb = self.zerdeParser.parseString();\n                const path = self.zerdeParser.parseString();\n                const proto = self.zerdeParser.parseString();\n                const domain = self.zerdeParser.parseString();\n                const contentType = self.zerdeParser.parseString();\n                const body = self.zerdeParser.parseU8Slice();\n                self.httpSend(verb, path, proto, domain, port, contentType, body, signalId);\n            },\n            // fullscreen\n            function fullscreen15(_self) {\n                rpc.send(_rpc_types__WEBPACK_IMPORTED_MODULE_6__.WorkerEvent.Fullscreen);\n            },\n            // normalscreen\n            function normalscreen16(_self) {\n                rpc.send(_rpc_types__WEBPACK_IMPORTED_MODULE_6__.WorkerEvent.Normalscreen);\n            },\n            // websocket_send\n            function websocketSend17(self) {\n                const url = self.zerdeParser.parseString();\n                const data = self.zerdeParser.parseU8Slice();\n                self.websocketSend(url, data);\n            },\n            // enable_global_file_drop_target\n            function enableGlobalFileDropTarget18(self) {\n                self.enableGlobalFileDropTarget();\n            },\n            // call_js\n            function callJs19(self) {\n                const fnName = self.zerdeParser.parseString();\n                const params = self.zerdeParser.parseWrfParams();\n                if (fnName === \"_wrflibReturnParams\") {\n                    const callbackId = JSON.parse(params[0]);\n                    self.callRustPendingCallbacks[callbackId](params.slice(1));\n                    delete self.callRustPendingCallbacks[callbackId];\n                }\n                else {\n                    rpc.send(_rpc_types__WEBPACK_IMPORTED_MODULE_6__.WorkerEvent.CallJs, { fnName, params });\n                }\n            },\n        ];\n        this.module = wasmModule;\n        this.exports = wasmExports;\n        this.memory = memory;\n        this.baseUri = baseUri;\n        this.sizingData = sizingData;\n        this.timers = [];\n        this.resources = [];\n        this.hasRequestedAnimationFrame = false;\n        this.websockets = {};\n        this.fileHandles = fileHandles;\n        this.callRustNewCallbackId = 0;\n        this.callRustPendingCallbacks = {};\n        if (offscreenCanvas) {\n            this.webglRenderer = new _webgl_renderer__WEBPACK_IMPORTED_MODULE_5__.WebGLRenderer(offscreenCanvas, this.memory, this.sizingData, () => {\n                rpc.send(_rpc_types__WEBPACK_IMPORTED_MODULE_6__.WorkerEvent.ShowIncompatibleBrowserNotification);\n            });\n        }\n        rpc.receive(_rpc_types__WEBPACK_IMPORTED_MODULE_6__.WorkerEvent.ScreenResize, (sizingData) => {\n            this.sizingData = sizingData;\n            if (this.webglRenderer) {\n                this.webglRenderer.resize(this.sizingData);\n            }\n            this.zerdeEventloopEvents.resize({\n                width: this.sizingData.width,\n                height: this.sizingData.height,\n                dpiFactor: this.sizingData.dpiFactor,\n                xrIsPresenting: this.xrIsPresenting,\n                xrCanPresent: this.xrCanPresent,\n                isFullscreen: this.sizingData.isFullscreen,\n            });\n            this.requestAnimationFrame();\n        });\n        // this.run_async_webxr_check();\n        this.bindMouseAndTouch();\n        this.bindKeyboard();\n        this.appPtr = this.exports.createWasmApp();\n        rpc.receive(_rpc_types__WEBPACK_IMPORTED_MODULE_6__.WorkerEvent.WindowFocus, () => {\n            this.zerdeEventloopEvents.windowFocus(true);\n            this.doWasmIo();\n        });\n        rpc.receive(_rpc_types__WEBPACK_IMPORTED_MODULE_6__.WorkerEvent.WindowBlur, () => {\n            this.zerdeEventloopEvents.windowFocus(false);\n            this.doWasmIo();\n        });\n        const callRust = ({ name, params, }) => {\n            const callbackId = this.callRustNewCallbackId++;\n            const promise = new Promise((resolve, _reject) => {\n                this.callRustPendingCallbacks[callbackId] = (data) => {\n                    // TODO(Dmitry): implement retrun_error on rust side and use reject(...) to communicate the error\n                    resolve(data);\n                };\n            });\n            this.zerdeEventloopEvents.callRust(name, params, callbackId);\n            this.doWasmIo();\n            return promise;\n        };\n        rpc.receive(_rpc_types__WEBPACK_IMPORTED_MODULE_6__.WorkerEvent.CallRust, callRust);\n        rpc.receive(_rpc_types__WEBPACK_IMPORTED_MODULE_6__.WorkerEvent.CreateBuffer, (data) => this.zerdeEventloopEvents.createWasmBuffer(data));\n        rpc.receive(_rpc_types__WEBPACK_IMPORTED_MODULE_6__.WorkerEvent.CreateReadOnlyBuffer, (data) => {\n            const bufferPtr = this.zerdeEventloopEvents.createWasmBuffer(data);\n            const arcPtr = this.zerdeEventloopEvents.createArcVec(bufferPtr, data);\n            return { bufferPtr, arcPtr };\n        });\n        rpc.receive(_rpc_types__WEBPACK_IMPORTED_MODULE_6__.WorkerEvent.IncrementArc, (arcPtr) => {\n            this.exports.incrementArc(BigInt(arcPtr));\n        });\n        rpc.receive(_rpc_types__WEBPACK_IMPORTED_MODULE_6__.WorkerEvent.DecrementArc, (arcPtr) => {\n            this.exports.decrementArc(BigInt(arcPtr));\n        });\n        rpc.receive(_rpc_types__WEBPACK_IMPORTED_MODULE_6__.WorkerEvent.DeallocVec, ({ bufferPtr, bufferLen, bufferCap }) => {\n            this.exports.deallocVec(BigInt(bufferPtr), BigInt(bufferLen), BigInt(bufferCap));\n        });\n        const bindMainWorkerPort = (port) => {\n            const userWorkerRpc = new _common__WEBPACK_IMPORTED_MODULE_1__.Rpc(port);\n            userWorkerRpc.receive(_rpc_types__WEBPACK_IMPORTED_MODULE_6__.MainWorkerChannelEvent.Init, () => ({\n                wasmModule: this.module,\n                memory: this.memory,\n                taskWorkerSab,\n                appPtr: this.appPtr,\n                baseUri,\n                tlsAndStackData: (0,_common__WEBPACK_IMPORTED_MODULE_1__.makeThreadLocalStorageAndStackDataOnExistingThread)(this.exports),\n            }));\n            userWorkerRpc.receive(_rpc_types__WEBPACK_IMPORTED_MODULE_6__.MainWorkerChannelEvent.BindMainWorkerPort, (port) => {\n                bindMainWorkerPort(port);\n            });\n            userWorkerRpc.receive(_rpc_types__WEBPACK_IMPORTED_MODULE_6__.MainWorkerChannelEvent.CallRust, callRust);\n            userWorkerRpc.receive(_rpc_types__WEBPACK_IMPORTED_MODULE_6__.MainWorkerChannelEvent.SendEventFromAnyThread, (eventPtr) => {\n                this.sendEventFromAnyThread(eventPtr);\n            });\n        };\n        rpc.receive(_rpc_types__WEBPACK_IMPORTED_MODULE_6__.WorkerEvent.BindMainWorkerPort, (port) => {\n            bindMainWorkerPort(port);\n        });\n        // create initial zerdeEventloopEvents\n        this.zerdeEventloopEvents = new _zerde_eventloop_events__WEBPACK_IMPORTED_MODULE_3__.ZerdeEventloopEvents(this);\n        // fetch dependencies\n        this.zerdeEventloopEvents.fetchDeps();\n        this.doWasmIo();\n        this.doWasmBlock = true;\n        // ok now, we wait for our resources to load.\n        Promise.all(this.resources).then(this.doDepResults.bind(this));\n    }\n    doDepResults(results) {\n        const deps = [];\n        // copy our reslts into wasm pointers\n        for (let i = 0; i < results.length; i++) {\n            const result = results[i];\n            // allocate pointer, do +8 because of the u64 length at the head of the buffer\n            const vecLen = result.buffer.byteLength;\n            const vecPtr = this.zerdeEventloopEvents.createWasmBuffer(new Uint8Array(result.buffer));\n            deps.push({\n                name: result.name,\n                vecPtr,\n                vecLen,\n            });\n        }\n        // pass wasm the deps\n        this.zerdeEventloopEvents.depsLoaded(deps);\n        // initialize the application\n        this.zerdeEventloopEvents.init({\n            width: this.sizingData.width,\n            height: this.sizingData.height,\n            dpiFactor: this.sizingData.dpiFactor,\n            xrCanPresent: this.xrCanPresent,\n            canFullscreen: this.sizingData.canFullscreen,\n            xrIsPresenting: false,\n        });\n        this.doWasmBlock = false;\n        this.doWasmIo();\n        rpc.send(_rpc_types__WEBPACK_IMPORTED_MODULE_6__.WorkerEvent.RemoveLoadingIndicators);\n    }\n    doWasmIo() {\n        if (this.doWasmBlock) {\n            return;\n        }\n        const byteOffset = this.zerdeEventloopEvents.end();\n        const zerdeParserPtr = Number(this.exports.processWasmEvents(this.appPtr, BigInt(byteOffset)));\n        // get a clean zerdeEventloopEvents set up immediately\n        this.zerdeEventloopEvents = new _zerde_eventloop_events__WEBPACK_IMPORTED_MODULE_3__.ZerdeEventloopEvents(this);\n        this.zerdeParser = new _zerde__WEBPACK_IMPORTED_MODULE_2__.ZerdeParser(this.memory, zerdeParserPtr);\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n            const msgType = this.zerdeParser.parseU32();\n            if (this.sendFnTable[msgType](this)) {\n                break;\n            }\n        }\n        this.exports.deallocWasmMessage(BigInt(zerdeParserPtr));\n    }\n    // TODO(JP): Should use sychronous file loading for this.\n    loadDeps(deps) {\n        for (let i = 0; i < deps.length; i++) {\n            const filePath = deps[i];\n            this.resources.push(this.fetchPath(filePath));\n        }\n    }\n    setDocumentTitle(title) {\n        rpc.send(_rpc_types__WEBPACK_IMPORTED_MODULE_6__.WorkerEvent.SetDocumentTitle, title);\n    }\n    bindMouseAndTouch() {\n        let lastMouseFinger;\n        // TODO(JP): Some day bring back touch scroll support..\n        // let use_touch_scroll_overlay = window.ontouchstart === null;\n        // if (use_touch_scroll_overlay) {\n        //     var ts = this.touch_scroll_overlay = document.createElement('div')\n        //     ts.className = \"cx_webgl_scroll_overlay\"\n        //     var ts_inner = document.createElement('div')\n        //     var style = document.createElement('style')\n        //     style.innerHTML = \"\\n\"\n        //         + \"div.cx_webgl_scroll_overlay {\\n\"\n        //         + \"z-index: 10000;\\n\"\n        //         + \"margin:0;\\n\"\n        //         + \"overflow:scroll;\\n\"\n        //         + \"top:0;\\n\"\n        //         + \"left:0;\\n\"\n        //         + \"width:100%;\\n\"\n        //         + \"height:100%;\\n\"\n        //         + \"position:fixed;\\n\"\n        //         + \"background-color:transparent\\n\"\n        //         + \"}\\n\"\n        //         + \"div.cx_webgl_scroll_overlay div{\\n\"\n        //         + \"margin:0;\\n\"\n        //         + \"width:400000px;\\n\"\n        //         + \"height:400000px;\\n\"\n        //         + \"background-color:transparent\\n\"\n        //         + \"}\\n\"\n        //     document.body.appendChild(style)\n        //     ts.appendChild(ts_inner);\n        //     document.body.appendChild(ts);\n        //     canvas = ts;\n        //     ts.scrollTop = 200000;\n        //     ts.scrollLeft = 200000;\n        //     let last_scroll_top = ts.scrollTop;\n        //     let last_scroll_left = ts.scrollLeft;\n        //     let scroll_timeout = null;\n        //     ts.addEventListener('scroll', e => {\n        //         let new_scroll_top = ts.scrollTop;\n        //         let new_scroll_left = ts.scrollLeft;\n        //         let dx = new_scroll_left - last_scroll_left;\n        //         let dy = new_scroll_top - last_scroll_top;\n        //         last_scroll_top = new_scroll_top;\n        //         last_scroll_left = new_scroll_left;\n        //         self.clearTimeout(scroll_timeout);\n        //         scroll_timeout = self.setTimeout(_ => {\n        //             ts.scrollTop = 200000;\n        //             ts.scrollLeft = 200000;\n        //             last_scroll_top = ts.scrollTop;\n        //             last_scroll_left = ts.scrollLeft;\n        //         }, 200);\n        //         let finger = last_mouse_finger;\n        //         if (finger) {\n        //             finger.scroll_x = dx;\n        //             finger.scroll_y = dy;\n        //             finger.is_wheel = true;\n        //             this.zerdeEventloopEvents.finger_scroll(finger);\n        //             this.do_wasm_io();\n        //         }\n        //     })\n        // }\n        const mouseFingers = [];\n        function mouseToFinger(e) {\n            // @ts-ignore; TypeScript does not like the empty object declaration below, but we immediately fill every field\n            const mf = mouseFingers[e.button] || (mouseFingers[e.button] = {});\n            mf.x = e.pageX;\n            mf.y = e.pageY;\n            mf.button = e.button;\n            mf.digit = e.button;\n            mf.time = performance.now() / 1000.0;\n            mf.modifiers = (0,_zerde_keyboard_handlers__WEBPACK_IMPORTED_MODULE_4__.packKeyModifier)(e);\n            mf.touch = false;\n            return mf;\n        }\n        const mouseButtonsDown = [];\n        rpc.receive(_rpc_types__WEBPACK_IMPORTED_MODULE_6__.WorkerEvent.CanvasMouseDown, (event) => {\n            mouseButtonsDown[event.button] = true;\n            this.zerdeEventloopEvents.fingerDown(mouseToFinger(event));\n            this.doWasmIo();\n        });\n        rpc.receive(_rpc_types__WEBPACK_IMPORTED_MODULE_6__.WorkerEvent.WindowMouseUp, (event) => {\n            mouseButtonsDown[event.button] = false;\n            this.zerdeEventloopEvents.fingerUp(mouseToFinger(event));\n            this.doWasmIo();\n        });\n        rpc.receive(_rpc_types__WEBPACK_IMPORTED_MODULE_6__.WorkerEvent.WindowMouseMove, (event) => {\n            for (let i = 0; i < mouseButtonsDown.length; i++) {\n                if (mouseButtonsDown[i]) {\n                    const mf = mouseToFinger(event);\n                    mf.digit = i;\n                    this.zerdeEventloopEvents.fingerMove(mf);\n                }\n            }\n            lastMouseFinger = mouseToFinger(event);\n            this.zerdeEventloopEvents.fingerHover(lastMouseFinger);\n            this.doWasmIo();\n        });\n        rpc.receive(_rpc_types__WEBPACK_IMPORTED_MODULE_6__.WorkerEvent.WindowMouseOut, (event) => {\n            this.zerdeEventloopEvents.fingerOut(mouseToFinger(event));\n            this.doWasmIo();\n        });\n        const touchIdsByDigit = [];\n        rpc.receive(_rpc_types__WEBPACK_IMPORTED_MODULE_6__.WorkerEvent.WindowTouchStart, (event) => {\n            for (const touch of event.changedTouches) {\n                let digit = touchIdsByDigit.indexOf(undefined);\n                if (digit === -1) {\n                    digit = touchIdsByDigit.length;\n                }\n                touchIdsByDigit[digit] = touch.identifier;\n                this.zerdeEventloopEvents.fingerDown({\n                    x: touch.pageX,\n                    y: touch.pageY,\n                    button: 0,\n                    digit,\n                    time: performance.now() / 1000.0,\n                    modifiers: (0,_zerde_keyboard_handlers__WEBPACK_IMPORTED_MODULE_4__.packKeyModifier)(event),\n                    touch: true,\n                });\n            }\n            this.doWasmIo();\n        });\n        rpc.receive(_rpc_types__WEBPACK_IMPORTED_MODULE_6__.WorkerEvent.WindowTouchMove, (event) => {\n            for (const touch of event.changedTouches) {\n                const digit = touchIdsByDigit.indexOf(touch.identifier);\n                if (digit == -1) {\n                    console.error(\"Unrecognized digit in WorkerEvent.WindowTouchMove\");\n                    continue;\n                }\n                this.zerdeEventloopEvents.fingerMove({\n                    x: touch.pageX,\n                    y: touch.pageY,\n                    button: 0,\n                    digit,\n                    time: performance.now() / 1000.0,\n                    modifiers: (0,_zerde_keyboard_handlers__WEBPACK_IMPORTED_MODULE_4__.packKeyModifier)(event),\n                    touch: true,\n                });\n            }\n            this.doWasmIo();\n        });\n        rpc.receive(_rpc_types__WEBPACK_IMPORTED_MODULE_6__.WorkerEvent.WindowTouchEndCancelLeave, (event) => {\n            for (const touch of event.changedTouches) {\n                const digit = touchIdsByDigit.indexOf(touch.identifier);\n                if (digit == -1) {\n                    console.error(\"Unrecognized digit in WorkerEvent.WindowTouchMove\");\n                    continue;\n                }\n                touchIdsByDigit[digit] = undefined;\n                this.zerdeEventloopEvents.fingerUp({\n                    x: touch.pageX,\n                    y: touch.pageY,\n                    button: 0,\n                    digit,\n                    time: performance.now() / 1000.0,\n                    modifiers: (0,_zerde_keyboard_handlers__WEBPACK_IMPORTED_MODULE_4__.packKeyModifier)(event),\n                    touch: true,\n                });\n            }\n            this.doWasmIo();\n        });\n        let lastWheelTime;\n        let lastWasWheel;\n        rpc.receive(_rpc_types__WEBPACK_IMPORTED_MODULE_6__.WorkerEvent.CanvasWheel, (event) => {\n            const finger = mouseToFinger(event);\n            const delta = event.timeStamp - lastWheelTime;\n            lastWheelTime = event.timeStamp;\n            // typical web bullshit. this reliably detects mousewheel or touchpad on mac in safari\n            if (isFirefox) {\n                lastWasWheel = event.deltaMode == 1;\n            }\n            else {\n                // detect it\n                if (\n                // @ts-ignore: TODO(Paras): wheelDeltaY looks different between browsers. Figure out a more consistent interface.\n                Math.abs(Math.abs(event.deltaY / event.wheelDeltaY) - 1 / 3) <\n                    0.00001 ||\n                    (!lastWasWheel && delta < 250)) {\n                    lastWasWheel = false;\n                }\n                else {\n                    lastWasWheel = true;\n                }\n            }\n            //console.log(event.deltaY / event.wheelDeltaY);\n            //last_delta = delta;\n            let fac = 1;\n            if (event.deltaMode === 1) {\n                fac = 40;\n            }\n            else if (event.deltaMode === 2) {\n                // TODO(Paras): deltaMode=2 means that a user is trying to scroll one page at a time.\n                // For now, we hardcode the pixel amount. We can later determine this contextually.\n                const offsetHeight = 800;\n                fac = offsetHeight;\n            }\n            const fingerScroll = Object.assign(Object.assign({}, finger), { scrollX: event.deltaX * fac, scrollY: event.deltaY * fac, isWheel: lastWasWheel });\n            this.zerdeEventloopEvents.fingerScroll(fingerScroll);\n            this.doWasmIo();\n        });\n        //window.addEventListener('webkitmouseforcewillbegin', this.onCheckMacForce.bind(this), false)\n        //window.addEventListener('webkitmouseforcechanged', this.onCheckMacForce.bind(this), false)\n    }\n    bindKeyboard() {\n        rpc.receive(_rpc_types__WEBPACK_IMPORTED_MODULE_6__.WorkerEvent.TextInput, (data) => {\n            this.zerdeEventloopEvents.textInput(data);\n            this.doWasmIo();\n        });\n        rpc.receive(_rpc_types__WEBPACK_IMPORTED_MODULE_6__.WorkerEvent.TextCopy, () => {\n            this.zerdeEventloopEvents.textCopy();\n            this.doWasmIo();\n        });\n        rpc.receive(_rpc_types__WEBPACK_IMPORTED_MODULE_6__.WorkerEvent.KeyDown, (data) => {\n            this.zerdeEventloopEvents.keyDown(data);\n            this.doWasmIo();\n        });\n        rpc.receive(_rpc_types__WEBPACK_IMPORTED_MODULE_6__.WorkerEvent.KeyUp, (data) => {\n            this.zerdeEventloopEvents.keyUp(data);\n            this.doWasmIo();\n        });\n    }\n    setMouseCursor(id) {\n        rpc.send(_rpc_types__WEBPACK_IMPORTED_MODULE_6__.WorkerEvent.SetMouseCursor, _cursor_map__WEBPACK_IMPORTED_MODULE_0__.cursorMap[id] || \"default\");\n    }\n    startTimer(id, interval, repeats) {\n        for (let i = 0; i < this.timers.length; i++) {\n            if (this.timers[i].id == id) {\n                console.log(\"Timer ID collision!\");\n                return;\n            }\n        }\n        const sysId = repeats !== 0\n            ? self.setInterval(() => {\n                this.zerdeEventloopEvents.timerFired(id);\n                this.doWasmIo();\n            }, interval * 1000.0)\n            : self.setTimeout(() => {\n                for (let i = 0; i < this.timers.length; i++) {\n                    const timer = this.timers[i];\n                    if (timer.id == id) {\n                        this.timers.splice(i, 1);\n                        break;\n                    }\n                }\n                this.zerdeEventloopEvents.timerFired(id);\n                this.doWasmIo();\n            }, interval * 1000.0);\n        this.timers.push({ id, repeats, sysId });\n    }\n    stopTimer(id) {\n        for (let i = 0; i < this.timers.length; i++) {\n            const timer = this.timers[i];\n            if (timer.id == id) {\n                if (timer.repeats) {\n                    self.clearInterval(timer.sysId);\n                }\n                else {\n                    self.clearTimeout(timer.sysId);\n                }\n                this.timers.splice(i, 1);\n                return;\n            }\n        }\n        //console.log(\"Timer ID not found!\")\n    }\n    httpSend(verb, path, proto, domain, port, contentType, body, signalId) {\n        const req = new XMLHttpRequest();\n        req.addEventListener(\"error\", (_) => {\n            // signal fail\n            this.zerdeEventloopEvents.httpSendResponse(signalId, 2);\n            this.doWasmIo();\n        });\n        req.addEventListener(\"load\", (_) => {\n            if (req.status !== 200) {\n                // signal fail\n                this.zerdeEventloopEvents.httpSendResponse(signalId, 2);\n            }\n            else {\n                //signal success\n                this.zerdeEventloopEvents.httpSendResponse(signalId, 1);\n            }\n            this.doWasmIo();\n        });\n        req.open(verb, proto + \"://\" + domain + \":\" + port + path, true);\n        console.log(verb, proto + \"://\" + domain + \":\" + port + path, body);\n        req.send(body.buffer);\n    }\n    websocketSend(url, data) {\n        // TODO(Paras): Stop patching sendStack onto websockets\n        // and maintain our own structure instead.\n        const socket = this.websockets[url];\n        if (!socket) {\n            const socket = new WebSocket(url);\n            this.websockets[url] = socket;\n            socket.sendStack = [data];\n            socket.addEventListener(\"close\", () => {\n                this.websockets[url] = null;\n            });\n            socket.addEventListener(\"error\", (event) => {\n                this.websockets[url] = null;\n                this.zerdeEventloopEvents.websocketError(url, \"\" + event);\n                this.doWasmIo();\n            });\n            socket.addEventListener(\"message\", (event) => {\n                event.data.arrayBuffer().then((data) => {\n                    this.zerdeEventloopEvents.websocketMessage(url, data);\n                    this.doWasmIo();\n                });\n            });\n            socket.addEventListener(\"open\", () => {\n                const sendStack = socket.sendStack;\n                socket.sendStack = null;\n                for (data of sendStack) {\n                    socket.send(data);\n                }\n            });\n        }\n        else {\n            if (socket.sendStack) {\n                socket.sendStack.push(data);\n            }\n            else {\n                socket.send(data);\n            }\n        }\n    }\n    enableGlobalFileDropTarget() {\n        rpc.send(_rpc_types__WEBPACK_IMPORTED_MODULE_6__.WorkerEvent.EnableGlobalFileDropTarget);\n        rpc.receive(_rpc_types__WEBPACK_IMPORTED_MODULE_6__.WorkerEvent.DragEnter, () => {\n            this.zerdeEventloopEvents.dragenter();\n            this.doWasmIo();\n        });\n        rpc.receive(_rpc_types__WEBPACK_IMPORTED_MODULE_6__.WorkerEvent.DragOver, ({ x, y }) => {\n            this.zerdeEventloopEvents.dragover(x, y);\n            this.doWasmIo();\n        });\n        rpc.receive(_rpc_types__WEBPACK_IMPORTED_MODULE_6__.WorkerEvent.DragLeave, () => {\n            this.zerdeEventloopEvents.dragleave();\n            this.doWasmIo();\n        });\n        rpc.receive(_rpc_types__WEBPACK_IMPORTED_MODULE_6__.WorkerEvent.Drop, ({ fileHandles, fileHandlesToSend, }) => {\n            // We can't set this.fileHandles to a new object, since other places hold\n            // references to it. Instead, clear it out and fill it up again.\n            this.fileHandles.splice(0, this.fileHandles.length);\n            this.fileHandles.push(...fileHandles);\n            this.zerdeEventloopEvents.appOpenFiles(fileHandlesToSend);\n            this.doWasmIo();\n        });\n    }\n    requestAnimationFrame() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.xrIsPresenting || this.hasRequestedAnimationFrame) {\n                return;\n            }\n            this.hasRequestedAnimationFrame = true;\n            if (this.runWebGLPromise) {\n                yield this.runWebGLPromise;\n            }\n            (self.requestAnimationFrame || self.setTimeout)(() => __awaiter(this, void 0, void 0, function* () {\n                if (this.runWebGLPromise) {\n                    yield this.runWebGLPromise;\n                }\n                this.hasRequestedAnimationFrame = false;\n                if (this.xrIsPresenting) {\n                    return;\n                }\n                this.zerdeEventloopEvents.animationFrame();\n                this.doWasmIo();\n            }));\n        });\n    }\n    // private runAsyncWebXRCheck(): void {\n    //   this.xrCanPresent = false;\n    //   this.xrIsPresenting = false;\n    //   // ok this changes a bunch in how the renderflow works.\n    //   // first thing we are going to do is get the vr displays.\n    //   // @ts-ignore - Let's not worry about XR.\n    //   const xrSystem = self.navigator.xr;\n    //   if (xrSystem) {\n    //     xrSystem.isSessionSupported(\"immersive-vr\").then((supported) => {\n    //       if (supported) {\n    //         this.xrCanPresent = true;\n    //       }\n    //     });\n    //   } else {\n    //     console.log(\"No webVR support found\");\n    //   }\n    // }\n    xrStartPresenting() {\n        // TODO(JP): Some day bring back XR support?\n        // if (this.xr_can_present) {\n        //     navigator.xr.requestSession('immersive-vr', {requiredFeatures: ['local-floor']}).then(xr_session => {\n        //         let xr_layer = new XRWebGLLayer(xr_session, this.gl, {\n        //             antialias: false,\n        //             depth: true,\n        //             stencil: false,\n        //             alpha: false,\n        //             ignoreDepthValues: false,\n        //             framebufferScaleFactor: 1.5\n        //         });\n        //         xr_session.updateRenderState({baseLayer: xr_layer});\n        //         xr_session.requestReferenceSpace(\"local-floor\").then(xr_reference_space => {\n        //             window.localStorage.setItem(\"xr_presenting\", \"true\");\n        //             this.xr_reference_space = xr_reference_space;\n        //             this.xr_session = xr_session;\n        //             this.xr_is_presenting = true;\n        //             let first_on_resize = true;\n        //             // read shit off the gamepad\n        //             xr_session.gamepad;\n        //             // lets start the loop\n        //             let inputs = [];\n        //             let alternate = false;\n        //             let last_time;\n        //             let xr_on_request_animation_frame = (time, xr_frame) => {\n        //                 if (first_on_resize) {\n        //                     this.on_screen_resize();\n        //                     first_on_resize = false;\n        //                 }\n        //                 if (!this.xr_is_presenting) {\n        //                     return;\n        //                 }\n        //                 this.xr_session.requestAnimationFrame(xr_on_request_animation_frame);\n        //                 this.xr_pose = xr_frame.getViewerPose(this.xr_reference_space);\n        //                 if (!this.xr_pose) {\n        //                     return;\n        //                 }\n        //                 this.zerdeEventloopEvents.xr_update_inputs(xr_frame, xr_session, time, this.xr_pose, this.xr_reference_space)\n        //                 this.zerdeEventloopEvents.animation_frame(time / 1000.0);\n        //                 this.in_animation_frame = true;\n        //                 let start = performance.now();\n        //                 this.do_wasm_io();\n        //                 this.in_animation_frame = false;\n        //                 this.xr_pose = null;\n        //                 //let new_time = performance.now();\n        //                 //if (new_time - last_time > 13.) {\n        //                 //    console.log(new_time - last_time);\n        //                 // }\n        //                 //last_time = new_time;\n        //             }\n        //             this.xr_session.requestAnimationFrame(xr_on_request_animation_frame);\n        //             this.xr_session.addEventListener(\"end\", () => {\n        //                 window.localStorage.setItem(\"xr_presenting\", \"false\");\n        //                 this.xr_is_presenting = false;\n        //                 this.on_screen_resize();\n        //                 this.zerdeEventloopEvents.paint_dirty();\n        //                 this.request_animation_frame();\n        //             })\n        //         })\n        //     })\n        // }\n    }\n    xrStopPresenting() {\n        // ignore for now\n    }\n    // TODO(JP): Should use sychronous file loading for this.\n    fetchPath(filePath) {\n        return new Promise((resolve, reject) => {\n            const req = new XMLHttpRequest();\n            req.addEventListener(\"error\", function () {\n                reject(filePath);\n            });\n            req.responseType = \"arraybuffer\";\n            req.addEventListener(\"load\", function () {\n                if (req.status !== 200) {\n                    reject(req.status);\n                }\n                resolve({\n                    name: filePath,\n                    buffer: req.response,\n                });\n            });\n            req.open(\"GET\", new URL(filePath, this.baseUri).href);\n            req.send();\n        });\n    }\n    sendEventFromAnyThread(eventPtr) {\n        // Prevent an infinite loop when calling this from an event handler.\n        setTimeout(() => {\n            this.zerdeEventloopEvents.sendEventFromAnyThread(eventPtr);\n            this.doWasmIo();\n        });\n    }\n}\nrpc.receive(_rpc_types__WEBPACK_IMPORTED_MODULE_6__.WorkerEvent.Init, ({ wasmModule, offscreenCanvas, sizingData, baseUri, memory, taskWorkerSab, }) => {\n    let wasmapp;\n    return new Promise((resolve, reject) => {\n        const threadSpawn = (ctxPtr) => {\n            rpc.send(_rpc_types__WEBPACK_IMPORTED_MODULE_6__.WorkerEvent.ThreadSpawn, {\n                ctxPtr,\n                tlsAndStackData: (0,_common__WEBPACK_IMPORTED_MODULE_1__.makeThreadLocalStorageAndStackDataOnExistingThread)(wasmapp.exports),\n            });\n        };\n        const getExports = () => {\n            return wasmapp.exports;\n        };\n        const fileHandles = [];\n        const env = (0,_common__WEBPACK_IMPORTED_MODULE_1__.getWasmEnv)({\n            getExports,\n            memory,\n            taskWorkerSab,\n            fileHandles,\n            sendEventFromAnyThread: (eventPtr) => {\n                wasmapp.sendEventFromAnyThread(eventPtr);\n            },\n            threadSpawn,\n            baseUri,\n        });\n        WebAssembly.instantiate(wasmModule, { env }).then((instance) => {\n            const wasmExports = instance.exports;\n            (0,_common__WEBPACK_IMPORTED_MODULE_1__.initThreadLocalStorageMainWorker)(wasmExports);\n            wasmapp = new WasmApp({\n                offscreenCanvas,\n                wasmModule,\n                wasmExports,\n                memory,\n                sizingData,\n                baseUri,\n                fileHandles,\n                taskWorkerSab,\n            });\n            resolve();\n        }, reject);\n    });\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./wrf_wasm_worker.ts\n");

/***/ }),

/***/ "./zerde_eventloop_events.ts":
/*!***********************************!*\
  !*** ./zerde_eventloop_events.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ZerdeEventloopEvents\": () => (/* binding */ ZerdeEventloopEvents)\n/* harmony export */ });\n/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common */ \"./common.ts\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./types */ \"./types.ts\");\n/* harmony import */ var _zerde_keyboard_handlers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./zerde_keyboard_handlers */ \"./zerde_keyboard_handlers.ts\");\n// Copyright (c) 2021-present, Cruise LLC\n//\n// This source code is licensed under the Apache License, Version 2.0,\n// found in the LICENSE-APACHE file in the root directory of this source tree.\n// You may not use this file except in compliance with the License.\n\n\n\n// A set of events. Each event starts with a u32 representing the event type, with 0 indicating the end. And\n// it is prefixed by a timestamp.\nclass ZerdeEventloopEvents {\n    constructor(wasmApp) {\n        this._wasmApp = wasmApp;\n        this._zerdeBuilder = (0,_common__WEBPACK_IMPORTED_MODULE_0__.makeZerdeBuilder)(wasmApp.memory, wasmApp.exports);\n        this._zerdeBuilder.sendF64(0); // Fit an f64 for the timestamp of when we send the message.\n    }\n    getWasmApp() {\n        return this._wasmApp;\n    }\n    fetchDeps() {\n        let port;\n        if (!location.port) {\n            if (location.protocol == \"https:\") {\n                port = 443;\n            }\n            else {\n                port = 80;\n            }\n        }\n        else {\n            port = parseInt(location.port);\n        }\n        this._zerdeBuilder.sendU32(1);\n        this._zerdeBuilder.sendU32(port);\n        this._zerdeBuilder.sendString(location.protocol);\n        this._zerdeBuilder.sendString(location.hostname);\n        this._zerdeBuilder.sendString(location.pathname);\n        this._zerdeBuilder.sendString(location.search);\n        this._zerdeBuilder.sendString(location.hash);\n    }\n    createWasmBuffer(data) {\n        return (0,_common__WEBPACK_IMPORTED_MODULE_0__.createWasmBuffer)(this._wasmApp.memory, this._wasmApp.exports, data);\n    }\n    createArcVec(vecPtr, data) {\n        return Number(this._wasmApp.exports.createArcVec(BigInt(vecPtr), BigInt(data.length), BigInt((0,_common__WEBPACK_IMPORTED_MODULE_0__.getWrfParamType)(data, true))));\n    }\n    depsLoaded(deps) {\n        this._zerdeBuilder.sendU32(2);\n        this._zerdeBuilder.sendU32(deps.length);\n        for (const dep of deps) {\n            this._zerdeBuilder.sendString(dep.name);\n            this._zerdeBuilder.sendU32(dep.vecPtr);\n            this._zerdeBuilder.sendU32(dep.vecLen);\n        }\n    }\n    init(info) {\n        this._zerdeBuilder.sendU32(3);\n        this._zerdeBuilder.sendF32(info.width);\n        this._zerdeBuilder.sendF32(info.height);\n        this._zerdeBuilder.sendF32(info.dpiFactor);\n        this._zerdeBuilder.sendU32(info.xrCanPresent ? 1 : 0);\n        this._zerdeBuilder.sendU32(info.canFullscreen ? 1 : 0);\n    }\n    resize(info) {\n        this._zerdeBuilder.sendU32(4);\n        this._zerdeBuilder.sendF32(info.width);\n        this._zerdeBuilder.sendF32(info.height);\n        this._zerdeBuilder.sendF32(info.dpiFactor);\n        this._zerdeBuilder.sendU32(info.xrIsPresenting ? 1 : 0);\n        this._zerdeBuilder.sendU32(info.xrCanPresent ? 1 : 0);\n        this._zerdeBuilder.sendU32(info.isFullscreen ? 1 : 0);\n    }\n    animationFrame() {\n        this._zerdeBuilder.sendU32(5);\n    }\n    fingerDown(finger) {\n        this._zerdeBuilder.sendU32(6);\n        this._zerdeBuilder.sendF32(finger.x);\n        this._zerdeBuilder.sendF32(finger.y);\n        this._zerdeBuilder.sendU32(finger.button);\n        this._zerdeBuilder.sendU32(finger.digit);\n        this._zerdeBuilder.sendU32(finger.touch ? 1 : 0);\n        this._zerdeBuilder.sendU32(finger.modifiers);\n        this._zerdeBuilder.sendF64(finger.time);\n    }\n    fingerUp(finger) {\n        this._zerdeBuilder.sendU32(7);\n        this._zerdeBuilder.sendF32(finger.x);\n        this._zerdeBuilder.sendF32(finger.y);\n        this._zerdeBuilder.sendU32(finger.button);\n        this._zerdeBuilder.sendU32(finger.digit);\n        this._zerdeBuilder.sendU32(finger.touch ? 1 : 0);\n        this._zerdeBuilder.sendU32(finger.modifiers);\n        this._zerdeBuilder.sendF64(finger.time);\n    }\n    fingerMove(finger) {\n        this._zerdeBuilder.sendU32(8);\n        this._zerdeBuilder.sendF32(finger.x);\n        this._zerdeBuilder.sendF32(finger.y);\n        this._zerdeBuilder.sendU32(finger.digit);\n        this._zerdeBuilder.sendU32(finger.touch ? 1 : 0);\n        this._zerdeBuilder.sendU32(finger.modifiers);\n        this._zerdeBuilder.sendF64(finger.time);\n    }\n    fingerHover(finger) {\n        this._zerdeBuilder.sendU32(9);\n        this._zerdeBuilder.sendF32(finger.x);\n        this._zerdeBuilder.sendF32(finger.y);\n        this._zerdeBuilder.sendU32(finger.modifiers);\n        this._zerdeBuilder.sendF64(finger.time);\n    }\n    fingerScroll(finger) {\n        this._zerdeBuilder.sendU32(10);\n        this._zerdeBuilder.sendF32(finger.x);\n        this._zerdeBuilder.sendF32(finger.y);\n        this._zerdeBuilder.sendF32(finger.scrollX);\n        this._zerdeBuilder.sendF32(finger.scrollY);\n        this._zerdeBuilder.sendU32(finger.isWheel ? 1 : 0);\n        this._zerdeBuilder.sendU32(finger.modifiers);\n        this._zerdeBuilder.sendF64(finger.time);\n    }\n    fingerOut(finger) {\n        this._zerdeBuilder.sendU32(11);\n        this._zerdeBuilder.sendF32(finger.x);\n        this._zerdeBuilder.sendF32(finger.y);\n        this._zerdeBuilder.sendU32(finger.modifiers);\n        this._zerdeBuilder.sendF64(finger.time);\n    }\n    keyDown(data) {\n        _zerde_keyboard_handlers__WEBPACK_IMPORTED_MODULE_2__.zerdeKeyboardHandlers.keyDown(this._zerdeBuilder, data);\n    }\n    keyUp(data) {\n        _zerde_keyboard_handlers__WEBPACK_IMPORTED_MODULE_2__.zerdeKeyboardHandlers.keyUp(this._zerdeBuilder, data);\n    }\n    textInput(data) {\n        _zerde_keyboard_handlers__WEBPACK_IMPORTED_MODULE_2__.zerdeKeyboardHandlers.textInput(this._zerdeBuilder, data);\n    }\n    textCopy() {\n        _zerde_keyboard_handlers__WEBPACK_IMPORTED_MODULE_2__.zerdeKeyboardHandlers.textCopy(this._zerdeBuilder);\n    }\n    timerFired(id) {\n        this._zerdeBuilder.sendU32(18);\n        this._zerdeBuilder.sendF64(id);\n    }\n    windowFocus(isFocus) {\n        // TODO CALL THIS\n        this._zerdeBuilder.sendU32(19);\n        this._zerdeBuilder.sendU32(isFocus ? 1 : 0);\n    }\n    xrUpdateHead(_inputsLen, _time) {\n        //this._zerde_builder.send_f64(time);\n    }\n    xrUpdateInputs(_xrFrame, _xrSessions, _time, _xrPose, _xrReferenceSpace) {\n        // send_pose_transform(pose_transform) {\n        //     let pos = this._fit(7)\n        //     let inv_orient = pose_transform.inverse.orientation;\n        //     this._f32[pos++] = inv_orient.x;\n        //     this._f32[pos++] = inv_orient.y;\n        //     this._f32[pos++] = inv_orient.z;\n        //     this._f32[pos++] = inv_orient.w;\n        //     let tpos = pose_transform.position;\n        //     this._f32[pos++] = tpos.x;\n        //     this._f32[pos++] = tpos.y;\n        //     this._f32[pos++] = tpos.z;\n        // }\n        // let input_len = xr_session.inputSources.length;\n        // let pos = this.fit(2);\n        // this.mu32[pos ++] = 20;\n        // this.mu32[pos ++] = input_len;\n        // this._zerde_builder.send_f64(time / 1000.0);\n        // this.send_pose_transform(xr_pose.transform);\n        // for (let i = 0; i < input_len; i ++) {\n        //     let input = xr_session.inputSources[i];\n        //     let grip_pose = xr_frame.getPose(input.gripSpace, xr_reference_space);\n        //     let ray_pose = xr_frame.getPose(input.targetRaySpace, xr_reference_space);\n        //     if (grip_pose == null || ray_pose == null) {\n        //         let pos = this.fit(1);\n        //         this.mu32[pos ++] = 0;\n        //         continue\n        //     }\n        //     let pos = this.fit(1);\n        //     this.mu32[pos ++] = 1;\n        //     this.send_pose_transform(grip_pose.transform)\n        //     this.send_pose_transform(ray_pose.transform)\n        //     let buttons = input.gamepad.buttons;\n        //     let axes = input.gamepad.axes;\n        //     let buttons_len = buttons.length;\n        //     let axes_len = axes.length;\n        //     pos = this.fit(3 + buttons_len * 2 + axes_len);\n        //     this.mu32[pos ++] = input.handedness == \"left\"? 1: input.handedness == \"right\"? 2: 0;\n        //     this.mu32[pos ++] = buttons_len;\n        //     for (let i = 0; i < buttons_len; i ++) {\n        //         this.mu32[pos ++] = buttons[i].pressed? 1: 0;\n        //         this.mf32[pos ++] = buttons[i].value;\n        //     }\n        //     this.mu32[pos ++] = axes_len;\n        //     for (let i = 0; i < axes_len; i ++) {\n        //         this.mf32[pos ++] = axes[i]\n        //     }\n        // }\n    }\n    paintDirty(_time, _frameData) {\n        this._zerdeBuilder.sendU32(21);\n    }\n    httpSendResponse(signalId, success) {\n        this._zerdeBuilder.sendU32(22);\n        this._zerdeBuilder.sendU32(signalId);\n        this._zerdeBuilder.sendU32(success);\n    }\n    sendEventFromAnyThread(eventPtr) {\n        this._zerdeBuilder.sendU32(26);\n        this._zerdeBuilder.sendU64(eventPtr);\n    }\n    websocketMessage(url, data) {\n        const vecLen = data.byteLength;\n        const vecPtr = this.createWasmBuffer(new Uint8Array(data));\n        this._zerdeBuilder.sendU32(23);\n        this._zerdeBuilder.sendU32(vecPtr);\n        this._zerdeBuilder.sendU32(vecLen);\n        this._zerdeBuilder.sendString(url);\n    }\n    websocketError(url, error) {\n        this._zerdeBuilder.sendU32(24);\n        this._zerdeBuilder.sendString(url);\n        this._zerdeBuilder.sendString(error);\n    }\n    appOpenFiles(fileHandles) {\n        this._zerdeBuilder.sendU32(25);\n        this._zerdeBuilder.sendU32(fileHandles.length);\n        for (const fileHandle of fileHandles) {\n            this._zerdeBuilder.sendU32(fileHandle.id);\n            this._zerdeBuilder.sendU64(BigInt(fileHandle.file.size));\n            this._zerdeBuilder.sendString(fileHandle.basename);\n        }\n    }\n    dragenter() {\n        this._zerdeBuilder.sendU32(27);\n    }\n    dragleave() {\n        this._zerdeBuilder.sendU32(28);\n    }\n    dragover(x, y) {\n        this._zerdeBuilder.sendU32(29);\n        this._zerdeBuilder.sendU32(x);\n        this._zerdeBuilder.sendU32(y);\n    }\n    callRust(name, params, callbackId) {\n        this._zerdeBuilder.sendU32(30);\n        this._zerdeBuilder.sendString(name);\n        this._zerdeBuilder.sendU32(params.length);\n        for (const param of params) {\n            if (typeof param === \"string\") {\n                this._zerdeBuilder.sendU32(_types__WEBPACK_IMPORTED_MODULE_1__.WrfParamType.String);\n                this._zerdeBuilder.sendString(param);\n            }\n            else {\n                if (\"bufferData\" in param) {\n                    this._zerdeBuilder.sendU32(param.bufferData.paramType);\n                    if (param.bufferData.readonly) {\n                        this._zerdeBuilder.sendU32(param.bufferData.arcPtr);\n                    }\n                    else {\n                        this._zerdeBuilder.sendU32(param.bufferData.bufferPtr);\n                        this._zerdeBuilder.sendU32(param.bufferData.bufferLen);\n                        this._zerdeBuilder.sendU32(param.bufferData.bufferCap);\n                    }\n                }\n                else {\n                    const vecLen = param.byteLength;\n                    const vecPtr = this.createWasmBuffer(param);\n                    this._zerdeBuilder.sendU32((0,_common__WEBPACK_IMPORTED_MODULE_0__.getWrfParamType)(param, false));\n                    this._zerdeBuilder.sendU32(vecPtr);\n                    this._zerdeBuilder.sendU32(vecLen);\n                    this._zerdeBuilder.sendU32(vecLen);\n                }\n            }\n        }\n        this._zerdeBuilder.sendU32(callbackId);\n    }\n    end() {\n        this._zerdeBuilder.sendU32(0);\n        const { buffer, byteOffset } = this._zerdeBuilder.getData();\n        // Fill in the current timestamp that we reserved space for at the beginning.\n        new Float64Array(buffer, byteOffset, 2)[1] = performance.now() / 1000.0;\n        return byteOffset;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./zerde_eventloop_events.ts\n");

/***/ }),

/***/ "./zerde_keyboard_handlers.ts":
/*!************************************!*\
  !*** ./zerde_keyboard_handlers.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"packKeyModifier\": () => (/* binding */ packKeyModifier),\n/* harmony export */   \"zerdeKeyboardHandlers\": () => (/* binding */ zerdeKeyboardHandlers)\n/* harmony export */ });\n// Copyright (c) 2021-present, Cruise LLC\n//\n// This source code is licensed under the Apache License, Version 2.0,\n// found in the LICENSE-APACHE file in the root directory of this source tree.\n// You may not use this file except in compliance with the License.\nfunction packKeyModifier(e) {\n    return ((e.shiftKey ? 1 : 0) |\n        (e.ctrlKey ? 2 : 0) |\n        (e.altKey ? 4 : 0) |\n        (e.metaKey ? 8 : 0));\n}\nconst zerdeKeyboardHandlers = {\n    keyDown(zerdeBuilder, data) {\n        zerdeBuilder.sendU32(12);\n        zerdeBuilder.sendU32(data.event.keyCode);\n        zerdeBuilder.sendU32(data.event.repeat ? 1 : 0);\n        zerdeBuilder.sendU32(packKeyModifier(data.event));\n        zerdeBuilder.sendF64(performance.now() / 1000.0);\n    },\n    keyUp(zerdeBuilder, data) {\n        zerdeBuilder.sendU32(13);\n        zerdeBuilder.sendU32(data.event.keyCode);\n        zerdeBuilder.sendU32(data.event.repeat ? 1 : 0);\n        zerdeBuilder.sendU32(packKeyModifier(data.event));\n        zerdeBuilder.sendF64(performance.now() / 1000.0);\n    },\n    textInput(zerdeBuilder, data) {\n        zerdeBuilder.sendU32(14);\n        zerdeBuilder.sendU32(data.wasPaste ? 1 : 0),\n            zerdeBuilder.sendU32(data.replaceLast ? 1 : 0),\n            zerdeBuilder.sendString(data.input);\n    },\n    textCopy(zerdeBuilder) {\n        zerdeBuilder.sendU32(17);\n    },\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi96ZXJkZV9rZXlib2FyZF9oYW5kbGVycy50cy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dyZi8uL3plcmRlX2tleWJvYXJkX2hhbmRsZXJzLnRzPzk2NDQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSAyMDIxLXByZXNlbnQsIENydWlzZSBMTENcbi8vXG4vLyBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAsXG4vLyBmb3VuZCBpbiB0aGUgTElDRU5TRS1BUEFDSEUgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbi8vIFlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbmV4cG9ydCBmdW5jdGlvbiBwYWNrS2V5TW9kaWZpZXIoZSkge1xuICAgIHJldHVybiAoKGUuc2hpZnRLZXkgPyAxIDogMCkgfFxuICAgICAgICAoZS5jdHJsS2V5ID8gMiA6IDApIHxcbiAgICAgICAgKGUuYWx0S2V5ID8gNCA6IDApIHxcbiAgICAgICAgKGUubWV0YUtleSA/IDggOiAwKSk7XG59XG5leHBvcnQgY29uc3QgemVyZGVLZXlib2FyZEhhbmRsZXJzID0ge1xuICAgIGtleURvd24oemVyZGVCdWlsZGVyLCBkYXRhKSB7XG4gICAgICAgIHplcmRlQnVpbGRlci5zZW5kVTMyKDEyKTtcbiAgICAgICAgemVyZGVCdWlsZGVyLnNlbmRVMzIoZGF0YS5ldmVudC5rZXlDb2RlKTtcbiAgICAgICAgemVyZGVCdWlsZGVyLnNlbmRVMzIoZGF0YS5ldmVudC5yZXBlYXQgPyAxIDogMCk7XG4gICAgICAgIHplcmRlQnVpbGRlci5zZW5kVTMyKHBhY2tLZXlNb2RpZmllcihkYXRhLmV2ZW50KSk7XG4gICAgICAgIHplcmRlQnVpbGRlci5zZW5kRjY0KHBlcmZvcm1hbmNlLm5vdygpIC8gMTAwMC4wKTtcbiAgICB9LFxuICAgIGtleVVwKHplcmRlQnVpbGRlciwgZGF0YSkge1xuICAgICAgICB6ZXJkZUJ1aWxkZXIuc2VuZFUzMigxMyk7XG4gICAgICAgIHplcmRlQnVpbGRlci5zZW5kVTMyKGRhdGEuZXZlbnQua2V5Q29kZSk7XG4gICAgICAgIHplcmRlQnVpbGRlci5zZW5kVTMyKGRhdGEuZXZlbnQucmVwZWF0ID8gMSA6IDApO1xuICAgICAgICB6ZXJkZUJ1aWxkZXIuc2VuZFUzMihwYWNrS2V5TW9kaWZpZXIoZGF0YS5ldmVudCkpO1xuICAgICAgICB6ZXJkZUJ1aWxkZXIuc2VuZEY2NChwZXJmb3JtYW5jZS5ub3coKSAvIDEwMDAuMCk7XG4gICAgfSxcbiAgICB0ZXh0SW5wdXQoemVyZGVCdWlsZGVyLCBkYXRhKSB7XG4gICAgICAgIHplcmRlQnVpbGRlci5zZW5kVTMyKDE0KTtcbiAgICAgICAgemVyZGVCdWlsZGVyLnNlbmRVMzIoZGF0YS53YXNQYXN0ZSA/IDEgOiAwKSxcbiAgICAgICAgICAgIHplcmRlQnVpbGRlci5zZW5kVTMyKGRhdGEucmVwbGFjZUxhc3QgPyAxIDogMCksXG4gICAgICAgICAgICB6ZXJkZUJ1aWxkZXIuc2VuZFN0cmluZyhkYXRhLmlucHV0KTtcbiAgICB9LFxuICAgIHRleHRDb3B5KHplcmRlQnVpbGRlcikge1xuICAgICAgICB6ZXJkZUJ1aWxkZXIuc2VuZFUzMigxNyk7XG4gICAgfSxcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./zerde_keyboard_handlers.ts\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/******/ 	// the startup function
/******/ 	__webpack_require__.x = () => {
/******/ 		// Load entry module and return exports
/******/ 		// This entry module depends on other loaded chunks and execution need to be delayed
/******/ 		var __webpack_exports__ = __webpack_require__.O(undefined, ["rpc_types_ts-wrf_buffer_ts"], () => (__webpack_require__("./wrf_wasm_worker.ts")))
/******/ 		__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 		return __webpack_exports__;
/******/ 	};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	(() => {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = (result, chunkIds, fn, priority) => {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var [chunkIds, fn, priority] = deferred[i];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					var r = fn();
/******/ 					if (r !== undefined) result = r;
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/ensure chunk */
/******/ 	(() => {
/******/ 		__webpack_require__.f = {};
/******/ 		// This file contains only the entry chunk.
/******/ 		// The chunk loading function for additional chunks
/******/ 		__webpack_require__.e = (chunkId) => {
/******/ 			return Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {
/******/ 				__webpack_require__.f[key](chunkId, promises);
/******/ 				return promises;
/******/ 			}, []));
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/get javascript chunk filename */
/******/ 	(() => {
/******/ 		// This function allow to reference async chunks and sibling chunks for the entrypoint
/******/ 		__webpack_require__.u = (chunkId) => {
/******/ 			// return url for filenames based on template
/******/ 			return "" + chunkId + ".js";
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var scriptUrl;
/******/ 		if (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + "";
/******/ 		var document = __webpack_require__.g.document;
/******/ 		if (!scriptUrl && document) {
/******/ 			if (document.currentScript)
/******/ 				scriptUrl = document.currentScript.src
/******/ 			if (!scriptUrl) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				if(scripts.length) scriptUrl = scripts[scripts.length - 1].src
/******/ 			}
/******/ 		}
/******/ 		// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration
/******/ 		// or pass an empty string ("") and set the __webpack_public_path__ variable from your code to use your own logic.
/******/ 		if (!scriptUrl) throw new Error("Automatic publicPath is not supported in this browser");
/******/ 		scriptUrl = scriptUrl.replace(/#.*$/, "").replace(/\?.*$/, "").replace(/\/[^\/]+$/, "/");
/******/ 		__webpack_require__.p = scriptUrl;
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/importScripts chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded chunks
/******/ 		// "1" means "already loaded"
/******/ 		var installedChunks = {
/******/ 			"wrf_wasm_worker_ts": 1
/******/ 		};
/******/ 		
/******/ 		// importScripts chunk loading
/******/ 		var installChunk = (data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			for(var moduleId in moreModules) {
/******/ 				if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 					__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 				}
/******/ 			}
/******/ 			if(runtime) runtime(__webpack_require__);
/******/ 			while(chunkIds.length)
/******/ 				installedChunks[chunkIds.pop()] = 1;
/******/ 			parentChunkLoadingFunction(data);
/******/ 		};
/******/ 		__webpack_require__.f.i = (chunkId, promises) => {
/******/ 			// "1" is the signal for "already loaded"
/******/ 			if(!installedChunks[chunkId]) {
/******/ 				if(true) { // all chunks have JS
/******/ 					importScripts(__webpack_require__.p + __webpack_require__.u(chunkId));
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunkwrf"] = self["webpackChunkwrf"] || [];
/******/ 		var parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);
/******/ 		chunkLoadingGlobal.push = installChunk;
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/startup chunk dependencies */
/******/ 	(() => {
/******/ 		var next = __webpack_require__.x;
/******/ 		__webpack_require__.x = () => {
/******/ 			return __webpack_require__.e("rpc_types_ts-wrf_buffer_ts").then(next);
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// run startup
/******/ 	var __webpack_exports__ = __webpack_require__.x();
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});