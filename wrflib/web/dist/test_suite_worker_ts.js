/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["wrf"] = factory();
	else
		root["wrf"] = factory();
})(self, function() {
return /******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./test_suite_worker.ts":
/*!******************************!*\
  !*** ./test_suite_worker.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _wrf_web_worker_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./wrf_web_worker_runtime */ \"./wrf_web_worker_runtime.ts\");\n/* harmony import */ var _wrf_test__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./wrf_test */ \"./wrf_test.ts\");\n/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common */ \"./common.ts\");\n// Copyright (c) 2021-present, Cruise LLC\n//\n// This source code is licensed under the Apache License, Version 2.0,\n// found in the LICENSE-APACHE file in the root directory of this source tree.\n// You may not use this file except in compliance with the License.\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\nconst rpc = new _common__WEBPACK_IMPORTED_MODULE_2__.Rpc(self);\nconst tests = {\n    testCallRustFromWorker: function () {\n        return __awaiter(this, void 0, void 0, function* () {\n            const buffer = new SharedArrayBuffer(8);\n            new Uint8Array(buffer).set([1, 2, 3, 4, 5, 6, 7, 8]);\n            const uint8Part = new Uint8Array(buffer, 2, 4);\n            const [result] = yield self.callRust(\"array_multiply\", [\n                JSON.stringify(10),\n                uint8Part,\n            ]);\n            (0,_wrf_test__WEBPACK_IMPORTED_MODULE_1__.expect)(result.length, 4);\n            (0,_wrf_test__WEBPACK_IMPORTED_MODULE_1__.expect)(result[0], 30);\n            (0,_wrf_test__WEBPACK_IMPORTED_MODULE_1__.expect)(result[1], 40);\n            (0,_wrf_test__WEBPACK_IMPORTED_MODULE_1__.expect)(result[2], 50);\n            (0,_wrf_test__WEBPACK_IMPORTED_MODULE_1__.expect)(result[3], 60);\n        });\n    },\n    testCallRustNoReturnFromWorker: function () {\n        return __awaiter(this, void 0, void 0, function* () {\n            const buffer = new SharedArrayBuffer(8);\n            new Uint8Array(buffer).set([1, 2, 3, 4, 5, 6, 7, 8]);\n            const uint8Part = new Uint8Array(buffer, 2, 4);\n            const result = yield self.callRust(\"call_rust_no_return\", [\n                JSON.stringify(10),\n                uint8Part,\n            ]);\n            (0,_wrf_test__WEBPACK_IMPORTED_MODULE_1__.expect)(result.length, 0);\n        });\n    },\n    testCallRustInSameThreadSyncWithSignal: function () {\n        const result = self.callRustInSameThreadSync(\"send_signal\");\n        (0,_wrf_test__WEBPACK_IMPORTED_MODULE_1__.expect)(result.length, 0);\n    },\n    testCallRustFloat32ArrayFromWorker: () => __awaiter(void 0, void 0, void 0, function* () {\n        // Using a normal array\n        const input = new Float32Array([0.1, 0.9, 0.3]);\n        const result = (yield self.callRust(\"array_multiply\", [JSON.stringify(10), input]))[0];\n        (0,_wrf_test__WEBPACK_IMPORTED_MODULE_1__.expect)(result.length, 3);\n        (0,_wrf_test__WEBPACK_IMPORTED_MODULE_1__.expect)(result[0], 1);\n        (0,_wrf_test__WEBPACK_IMPORTED_MODULE_1__.expect)(result[1], 9);\n        (0,_wrf_test__WEBPACK_IMPORTED_MODULE_1__.expect)(result[2], 3);\n        // Using a WrfArray\n        const input2 = self.createBuffer(new Float32Array([0.1, 0.9, 0.3]));\n        const result2 = (yield self.callRust(\"array_multiply\", [JSON.stringify(10), input2]))[0];\n        (0,_wrf_test__WEBPACK_IMPORTED_MODULE_1__.expect)(result2.length, 3);\n        (0,_wrf_test__WEBPACK_IMPORTED_MODULE_1__.expect)(result2[0], 1);\n        (0,_wrf_test__WEBPACK_IMPORTED_MODULE_1__.expect)(result2[1], 9);\n        (0,_wrf_test__WEBPACK_IMPORTED_MODULE_1__.expect)(result2[2], 3);\n        // Using a readonly WrfArray\n        const input3 = self.createReadOnlyBuffer(new Float32Array([0.1, 0.9, 0.3]));\n        const result3 = (yield self.callRust(\"array_multiply\", [JSON.stringify(10), input3]))[0];\n        (0,_wrf_test__WEBPACK_IMPORTED_MODULE_1__.expect)(result3.length, 3);\n        (0,_wrf_test__WEBPACK_IMPORTED_MODULE_1__.expect)(result3[0], 1);\n        (0,_wrf_test__WEBPACK_IMPORTED_MODULE_1__.expect)(result3[1], 9);\n        (0,_wrf_test__WEBPACK_IMPORTED_MODULE_1__.expect)(result3[2], 3);\n    }),\n    testCallRustInSameThreadSyncFloat32ArrayFromWorker: () => __awaiter(void 0, void 0, void 0, function* () {\n        // Using a normal array\n        const input = new Float32Array([0.1, 0.9, 0.3]);\n        const result = self.callRustInSameThreadSync(\"array_multiply\", [\n            JSON.stringify(10),\n            input,\n        ])[0];\n        (0,_wrf_test__WEBPACK_IMPORTED_MODULE_1__.expect)(result.length, 3);\n        (0,_wrf_test__WEBPACK_IMPORTED_MODULE_1__.expect)(result[0], 1);\n        (0,_wrf_test__WEBPACK_IMPORTED_MODULE_1__.expect)(result[1], 9);\n        (0,_wrf_test__WEBPACK_IMPORTED_MODULE_1__.expect)(result[2], 3);\n        // Using a WrfArray\n        const input2 = self.createBuffer(new Float32Array([0.1, 0.9, 0.3]));\n        const result2 = self.callRustInSameThreadSync(\"array_multiply\", [\n            JSON.stringify(10),\n            input2,\n        ])[0];\n        (0,_wrf_test__WEBPACK_IMPORTED_MODULE_1__.expect)(result2.length, 3);\n        (0,_wrf_test__WEBPACK_IMPORTED_MODULE_1__.expect)(result2[0], 1);\n        (0,_wrf_test__WEBPACK_IMPORTED_MODULE_1__.expect)(result2[1], 9);\n        (0,_wrf_test__WEBPACK_IMPORTED_MODULE_1__.expect)(result2[2], 3);\n        // Using a readonly WrfArray\n        const input3 = self.createReadOnlyBuffer(new Float32Array([0.1, 0.9, 0.3]));\n        const result3 = self.callRustInSameThreadSync(\"array_multiply\", [\n            JSON.stringify(10),\n            input3,\n        ])[0];\n        (0,_wrf_test__WEBPACK_IMPORTED_MODULE_1__.expect)(result3.length, 3);\n        (0,_wrf_test__WEBPACK_IMPORTED_MODULE_1__.expect)(result3[0], 1);\n        (0,_wrf_test__WEBPACK_IMPORTED_MODULE_1__.expect)(result3[1], 9);\n        (0,_wrf_test__WEBPACK_IMPORTED_MODULE_1__.expect)(result3[2], 3);\n    }),\n};\nrpc.receive(\"initWasm\", (port) => {\n    self.initWrfUserWorkerRuntime(port);\n});\nrpc.receive(\"runTest\", (testName) => __awaiter(void 0, void 0, void 0, function* () { return tests[testName](); }));\nrpc.receive(\"sendWorker\", function (array) {\n    const data = self.deserializeWrfArrayFromPostMessage(array);\n    console.log(\"got data\", data);\n});\nrpc.receive(\"testSendWrfArrayToMainThread\", function () {\n    const buffer = new SharedArrayBuffer(8);\n    new Uint8Array(buffer).set([1, 2, 3, 4, 5, 6, 7, 8]);\n    const uint8Part = new Uint8Array(buffer, 2, 4);\n    const wrfArray = self.callRustInSameThreadSync(\"array_multiply\", [\n        JSON.stringify(10),\n        uint8Part,\n    ])[0];\n    return {\n        array: self.serializeWrfArrayForPostMessage(wrfArray),\n        subarray: self.serializeWrfArrayForPostMessage(wrfArray.subarray(1, 3)),\n    };\n});\nrpc.receive(\"testCallRustInSameThreadSyncWithWrfbuffer\", function () {\n    const result = self.createBuffer(new Uint8Array([1, 2, 3, 4, 5, 6, 7, 8]));\n    const [result2] = self.callRustInSameThreadSync(\"array_multiply\", [\n        JSON.stringify(10),\n        result,\n    ]);\n    return self.serializeWrfArrayForPostMessage(result2);\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./test_suite_worker.ts\n");

/***/ }),

/***/ "./wrf_web_worker_runtime.ts":
/*!***********************************!*\
  !*** ./wrf_web_worker_runtime.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common */ \"./common.ts\");\n/* harmony import */ var _rpc_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./rpc_types */ \"./rpc_types.ts\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./types */ \"./types.ts\");\n/* harmony import */ var _wrf_buffer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./wrf_buffer */ \"./wrf_buffer.ts\");\n/* harmony import */ var _zerde__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./zerde */ \"./zerde.ts\");\n// Copyright (c) 2021-present, Cruise LLC\n//\n// This source code is licensed under the Apache License, Version 2.0,\n// found in the LICENSE-APACHE file in the root directory of this source tree.\n// You may not use this file except in compliance with the License.\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n\n\n(0,_wrf_buffer__WEBPACK_IMPORTED_MODULE_3__.overwriteTypedArraysWithWrfArrays)();\nlet _wrfWorkerRpc;\nself.initWrfUserWorkerRuntime = (wrfWorkerPort) => {\n    if (self.wrfInitialized) {\n        throw new Error(\"Don't call initWrfUserWorkerRuntime twice\");\n    }\n    self.wrfInitialized = new Promise((resolve) => {\n        _wrfWorkerRpc = new _common__WEBPACK_IMPORTED_MODULE_0__.Rpc(wrfWorkerPort);\n        self.wrfNewWorkerPort = () => {\n            const channel = new MessageChannel();\n            _wrfWorkerRpc.send(_rpc_types__WEBPACK_IMPORTED_MODULE_1__.MainWorkerChannelEvent.BindMainWorkerPort, channel.port1, [channel.port1]);\n            return channel.port2;\n        };\n        _wrfWorkerRpc\n            .send(_rpc_types__WEBPACK_IMPORTED_MODULE_1__.MainWorkerChannelEvent.Init)\n            .then(({ wasmModule, memory, taskWorkerSab, baseUri, appPtr, tlsAndStackData, }) => {\n            let wasmExports;\n            function getExports() {\n                return wasmExports;\n            }\n            const env = (0,_common__WEBPACK_IMPORTED_MODULE_0__.getWasmEnv)({\n                getExports,\n                memory,\n                taskWorkerSab,\n                fileHandles: [],\n                sendEventFromAnyThread: (eventPtr) => {\n                    _wrfWorkerRpc.send(_rpc_types__WEBPACK_IMPORTED_MODULE_1__.MainWorkerChannelEvent.SendEventFromAnyThread, eventPtr);\n                },\n                threadSpawn: () => {\n                    throw new Error(\"Not yet implemented\");\n                },\n                baseUri,\n            });\n            WebAssembly.instantiate(wasmModule, { env }).then((instance) => {\n                wasmExports = instance.exports;\n                (0,_common__WEBPACK_IMPORTED_MODULE_0__.initThreadLocalStorageAndStackOtherWorkers)(wasmExports, tlsAndStackData);\n                const destructor = (arcPtr) => {\n                    wasmExports.decrementArc(BigInt(arcPtr));\n                };\n                const mutableDestructor = ({ bufferPtr, bufferLen, bufferCap, }) => {\n                    wasmExports.deallocVec(BigInt(bufferPtr), BigInt(bufferLen), BigInt(bufferCap));\n                };\n                const transformParamsFromRust = (params) => (0,_common__WEBPACK_IMPORTED_MODULE_0__.transformParamsFromRustImpl)(memory, destructor, mutableDestructor, params);\n                // TODO(JP): Allocate buffers on the wasm memory directly here.\n                self.callRust = (name, params = []) => __awaiter(void 0, void 0, void 0, function* () {\n                    for (const param of params) {\n                        if (typeof param !== \"string\" &&\n                            !(param.buffer instanceof SharedArrayBuffer)) {\n                            console.warn(\"Consider passing Uint8Arrays backed by SharedArrayBuffer into `callRust` to prevent copying data\");\n                        }\n                    }\n                    const result = yield _wrfWorkerRpc.send(_rpc_types__WEBPACK_IMPORTED_MODULE_1__.MainWorkerChannelEvent.CallRust, {\n                        name,\n                        params,\n                    });\n                    return transformParamsFromRust(result);\n                });\n                // TODO(JP): Some of this code is duplicated with callRust/call_js; see if we can reuse some.\n                self.callRustInSameThreadSync = (name, params = []) => {\n                    const zerdeBuilder = (0,_common__WEBPACK_IMPORTED_MODULE_0__.makeZerdeBuilder)(memory, wasmExports);\n                    zerdeBuilder.sendString(name);\n                    zerdeBuilder.sendU32(params.length);\n                    for (const param of params) {\n                        if (typeof param === \"string\") {\n                            zerdeBuilder.sendU32(_types__WEBPACK_IMPORTED_MODULE_2__.WrfParamType.String);\n                            zerdeBuilder.sendString(param);\n                        }\n                        else {\n                            if (param.buffer instanceof _wrf_buffer__WEBPACK_IMPORTED_MODULE_3__.WrfBuffer) {\n                                (0,_wrf_buffer__WEBPACK_IMPORTED_MODULE_3__.checkValidWrfArray)(param);\n                                if (param.buffer.__wrflibBufferData.readonly) {\n                                    zerdeBuilder.sendU32((0,_common__WEBPACK_IMPORTED_MODULE_0__.getWrfParamType)(param, true));\n                                    const arcPtr = param.buffer.__wrflibBufferData.arcPtr;\n                                    // WrfParam parsing code will construct an Arc without incrementing\n                                    // the count, so we do it here ahead of time.\n                                    wasmExports.incrementArc(BigInt(arcPtr));\n                                    zerdeBuilder.sendU32(arcPtr);\n                                }\n                                else {\n                                    // TODO(Paras): User should not be able to access the buffer after\n                                    // passing it to Rust here\n                                    (0,_wrf_buffer__WEBPACK_IMPORTED_MODULE_3__.unregisterMutableBuffer)(param.buffer);\n                                    zerdeBuilder.sendU32((0,_common__WEBPACK_IMPORTED_MODULE_0__.getWrfParamType)(param, false));\n                                    zerdeBuilder.sendU32(param.buffer.__wrflibBufferData.bufferPtr);\n                                    zerdeBuilder.sendU32(param.buffer.__wrflibBufferData.bufferLen);\n                                    zerdeBuilder.sendU32(param.buffer.__wrflibBufferData.bufferCap);\n                                }\n                            }\n                            else {\n                                console.warn(\"Consider passing Uint8Arrays backed by WrfBuffer to prevent copying data\");\n                                const vecLen = param.byteLength;\n                                const vecPtr = (0,_common__WEBPACK_IMPORTED_MODULE_0__.createWasmBuffer)(memory, wasmExports, param);\n                                zerdeBuilder.sendU32((0,_common__WEBPACK_IMPORTED_MODULE_0__.getWrfParamType)(param, false));\n                                zerdeBuilder.sendU32(vecPtr);\n                                zerdeBuilder.sendU32(vecLen);\n                                zerdeBuilder.sendU32(vecLen);\n                            }\n                        }\n                    }\n                    const returnPtr = wasmExports.callRustInSameThreadSync(appPtr, BigInt(zerdeBuilder.getData().byteOffset));\n                    const zerdeParser = new _zerde__WEBPACK_IMPORTED_MODULE_4__.ZerdeParser(memory, Number(returnPtr));\n                    const returnParams = zerdeParser.parseWrfParams();\n                    return transformParamsFromRust(returnParams);\n                };\n                self.createBuffer = (data) => {\n                    const bufferLen = data.byteLength;\n                    const bufferPtr = (0,_common__WEBPACK_IMPORTED_MODULE_0__.createWasmBuffer)(memory, wasmExports, data);\n                    return transformParamsFromRust([\n                        {\n                            paramType: (0,_common__WEBPACK_IMPORTED_MODULE_0__.getWrfParamType)(data, false),\n                            bufferPtr,\n                            bufferLen,\n                            bufferCap: bufferLen,\n                            readonly: false,\n                        },\n                    ])[0];\n                };\n                self.createReadOnlyBuffer = (data) => {\n                    const bufferPtr = (0,_common__WEBPACK_IMPORTED_MODULE_0__.createWasmBuffer)(memory, wasmExports, data);\n                    const paramType = (0,_common__WEBPACK_IMPORTED_MODULE_0__.getWrfParamType)(data, true);\n                    const arcPtr = Number(wasmExports.createArcVec(BigInt(bufferPtr), BigInt(data.length), BigInt(paramType)));\n                    return transformParamsFromRust([\n                        {\n                            paramType,\n                            bufferPtr,\n                            bufferLen: data.byteLength,\n                            arcPtr,\n                            readonly: true,\n                        },\n                    ])[0];\n                };\n                self.isWrfBuffer = _wrf_buffer__WEBPACK_IMPORTED_MODULE_3__.isWrfBuffer;\n                // TODO(JP): Somewhat duplicated with the other implementation.\n                self.serializeWrfArrayForPostMessage = (wrfArray) => {\n                    if (!(typeof wrfArray === \"object\" &&\n                        self.isWrfBuffer(wrfArray.buffer))) {\n                        throw new Error(\"Only pass Wrf arrays to serializeWrfArrayForPostMessage\");\n                    }\n                    const wrfBuffer = wrfArray.buffer;\n                    if (wrfBuffer.readonly) {\n                        wasmExports.incrementArc(BigInt(wrfBuffer.__wrflibBufferData.arcPtr));\n                    }\n                    else {\n                        (0,_wrf_buffer__WEBPACK_IMPORTED_MODULE_3__.unregisterMutableBuffer)(wrfBuffer);\n                    }\n                    return {\n                        bufferData: wrfBuffer.__wrflibBufferData,\n                        byteOffset: wrfArray.byteOffset,\n                        byteLength: wrfArray.byteLength,\n                    };\n                };\n                self.deserializeWrfArrayFromPostMessage = (postMessageData) => {\n                    const wrfBuffer = (0,_wrf_buffer__WEBPACK_IMPORTED_MODULE_3__.getWrfBufferWasm)(memory, postMessageData.bufferData, destructor, mutableDestructor);\n                    return new Uint8Array(wrfBuffer, postMessageData.byteOffset, postMessageData.byteLength);\n                };\n                resolve();\n            });\n        });\n    });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./wrf_web_worker_runtime.ts\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/******/ 	// the startup function
/******/ 	__webpack_require__.x = () => {
/******/ 		// Load entry module and return exports
/******/ 		// This entry module depends on other loaded chunks and execution need to be delayed
/******/ 		var __webpack_exports__ = __webpack_require__.O(undefined, ["rpc_types_ts-wrf_buffer_ts"], () => (__webpack_require__("./test_suite_worker.ts")))
/******/ 		__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 		return __webpack_exports__;
/******/ 	};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	(() => {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = (result, chunkIds, fn, priority) => {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var [chunkIds, fn, priority] = deferred[i];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					var r = fn();
/******/ 					if (r !== undefined) result = r;
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/ensure chunk */
/******/ 	(() => {
/******/ 		__webpack_require__.f = {};
/******/ 		// This file contains only the entry chunk.
/******/ 		// The chunk loading function for additional chunks
/******/ 		__webpack_require__.e = (chunkId) => {
/******/ 			return Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {
/******/ 				__webpack_require__.f[key](chunkId, promises);
/******/ 				return promises;
/******/ 			}, []));
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/get javascript chunk filename */
/******/ 	(() => {
/******/ 		// This function allow to reference async chunks and sibling chunks for the entrypoint
/******/ 		__webpack_require__.u = (chunkId) => {
/******/ 			// return url for filenames based on template
/******/ 			return "" + chunkId + ".js";
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var scriptUrl;
/******/ 		if (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + "";
/******/ 		var document = __webpack_require__.g.document;
/******/ 		if (!scriptUrl && document) {
/******/ 			if (document.currentScript)
/******/ 				scriptUrl = document.currentScript.src
/******/ 			if (!scriptUrl) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				if(scripts.length) scriptUrl = scripts[scripts.length - 1].src
/******/ 			}
/******/ 		}
/******/ 		// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration
/******/ 		// or pass an empty string ("") and set the __webpack_public_path__ variable from your code to use your own logic.
/******/ 		if (!scriptUrl) throw new Error("Automatic publicPath is not supported in this browser");
/******/ 		scriptUrl = scriptUrl.replace(/#.*$/, "").replace(/\?.*$/, "").replace(/\/[^\/]+$/, "/");
/******/ 		__webpack_require__.p = scriptUrl;
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/importScripts chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded chunks
/******/ 		// "1" means "already loaded"
/******/ 		var installedChunks = {
/******/ 			"test_suite_worker_ts": 1
/******/ 		};
/******/ 		
/******/ 		// importScripts chunk loading
/******/ 		var installChunk = (data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			for(var moduleId in moreModules) {
/******/ 				if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 					__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 				}
/******/ 			}
/******/ 			if(runtime) runtime(__webpack_require__);
/******/ 			while(chunkIds.length)
/******/ 				installedChunks[chunkIds.pop()] = 1;
/******/ 			parentChunkLoadingFunction(data);
/******/ 		};
/******/ 		__webpack_require__.f.i = (chunkId, promises) => {
/******/ 			// "1" is the signal for "already loaded"
/******/ 			if(!installedChunks[chunkId]) {
/******/ 				if(true) { // all chunks have JS
/******/ 					importScripts(__webpack_require__.p + __webpack_require__.u(chunkId));
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunkwrf"] = self["webpackChunkwrf"] || [];
/******/ 		var parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);
/******/ 		chunkLoadingGlobal.push = installChunk;
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/startup chunk dependencies */
/******/ 	(() => {
/******/ 		var next = __webpack_require__.x;
/******/ 		__webpack_require__.x = () => {
/******/ 			return __webpack_require__.e("rpc_types_ts-wrf_buffer_ts").then(next);
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// run startup
/******/ 	var __webpack_exports__ = __webpack_require__.x();
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});